<#
Written by Ryan Ephgrave for ConfigMgr 2012 Right Click Tools
http://psrightclicktools.codeplex.com/
GUI Generated By: SAPIEN Technologies PrimalForms (Community Edition) v1.0.10.0
#>

$ResourceID = $args[0]
$Server = $args[1]
$Namespace = $args[2]

$strQuery = "Select ResourceID,ResourceNames from SMS_R_System where ResourceID='$ResourceID'"
Get-WmiObject -Query $strQuery -Namespace $Namespace -ComputerName $Server | ForEach-Object {$CompName = $_.ResourceNames[0]}

$Popup = new-object -comobject wscript.shell

$GetDirectory = $MyInvocation.MyCommand.path
$Directory = Split-Path $GetDirectory

function GenerateForm {

#region Import the Assemblies
[reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
#endregion

#region Generated Form Objects
$form1 = New-Object System.Windows.Forms.Form
$ModifierBox = New-Object System.Windows.Forms.ComboBox
$TaskNameBox = New-Object System.Windows.Forms.TextBox
$TaskNmeLbl = New-Object System.Windows.Forms.Label
$ModifierLbl = New-Object System.Windows.Forms.Label
$AboutBtn = New-Object System.Windows.Forms.Button
$StartBtn = New-Object System.Windows.Forms.Button
$CancelBtn = New-Object System.Windows.Forms.Button
$DelayBox = New-Object System.Windows.Forms.TextBox
$DelayLbl = New-Object System.Windows.Forms.Label
$IfUserOnBox = New-Object System.Windows.Forms.ComboBox
$IfUserOnLbl = New-Object System.Windows.Forms.Label
$ActionOptionsLbl = New-Object System.Windows.Forms.Label
$SchTasksLbl = New-Object System.Windows.Forms.Label
$EndDateBox = New-Object System.Windows.Forms.DateTimePicker
$EndDateLbl = New-Object System.Windows.Forms.Label
$FreqBox = New-Object System.Windows.Forms.ComboBox
$FrequencyLbl = New-Object System.Windows.Forms.Label
$RestartShutdownLbl = New-Object System.Windows.Forms.Label
$StartTimeBox = New-Object System.Windows.Forms.DateTimePicker
$StartTimeLbl = New-Object System.Windows.Forms.Label
$StartDateLbl = New-Object System.Windows.Forms.Label
$StartDateBox = New-Object System.Windows.Forms.DateTimePicker
$ShutRebBox = New-Object System.Windows.Forms.ComboBox
$CompColName = New-Object System.Windows.Forms.Label
$InitialFormWindowState = New-Object System.Windows.Forms.FormWindowState
#endregion Generated Form Objects

#region Start Button
$Start_Btn_Action= 
{
	$Action = $ShutRebBox.Text
	$Delay = $DelayBox.Text
	$CopyDirectory = $null
	$ActionSelected = $true
	$TaskName = $null
	$TaskName = $TaskNameBox.Text
	$TaskName = $TaskName.Replace(" ","")
	$StartDate = $StartDateBox.Value
	$EndDate = $EndDateBox.Value
	$Error.Clear()

	#region Make shutdown command
	
	if ($Action -eq "Restart"){
		$IfUserOnBoxText = $IfUserOnBox.Text
		if ($IfUserOnBoxText -eq "Restart Computer") {
			$ShutdownCommand = "shutdown /r /f /t $delay"
		}
		elseif ($IfUserOnBoxText -eq "Give user a prompt to cancel"){
			Get-WmiObject -ComputerName $CompName -class Win32_OperatingSystem | ForEach-Object {$WinDirectory = $_.WindowsDirectory}
			$ShutdownCommand = "$WinDirectory\ConfigMgr_Shutdown_Utility.exe /r /t $Delay /Schtask `"$WinDirectory\ConfigMgr_Shutdown_Utility.exe`""
			$CopyDirectory = $WinDirectory.ToLower().replace("c:","\\$CompName\c$")
			Copy-Item "$Directory\ConfigMgr_Shutdown_Utility.exe" $CopyDirectory -Force
			Copy-Item "$Directory\ConfigMgr_Shutdown_Utility.vbs" $CopyDirectory -Force
		}
		elseif ($IfUserOnBoxText -eq "Cancel Restart") {
			Get-WmiObject -ComputerName $CompName -class Win32_OperatingSystem | ForEach-Object {$WinDirectory = $_.WindowsDirectory}
			$ShutdownCommand = "$WinDirectory\ConfigMgr_Shutdown_Utility.exe /r /t $Delay /Skip /Schtask `"$WinDirectory\ConfigMgr_Shutdown_Utility.exe`""
			$CopyDirectory = $WinDirectory.ToLower().replace("c:","\\$CompName\c$")
			Copy-Item "$Directory\ConfigMgr_Shutdown_Utility.exe" $CopyDirectory -Force
		}
	}
	elseif ($Action -eq "Shutdown") {
		$IfUserOnBoxText = $IfUserOnBox.Text
		if ($IfUserOnBoxText -eq "Shutdown Computer") {
			$ShutdownCommand = "shutdown /s /f /t $delay"
		}
		elseif ($IfUserOnBoxText -eq "Give user a prompt to cancel"){
			Get-WmiObject -ComputerName $CompName -class Win32_OperatingSystem | ForEach-Object {$WinDirectory = $_.WindowsDirectory}
			$ShutdownCommand = "$WinDirectory\ConfigMgr_Shutdown_Utility.exe -arguments /s /t $Delay /Schtask `"$WinDirectory\ConfigMgr_Shutdown_Utility.exe`""
			$CopyDirectory = $WinDirectory.ToLower().replace("c:","\\$CompName\c$")
			Copy-Item "$Directory\ConfigMgr_Shutdown_Utility.exe" $CopyDirectory -Force
			Copy-Item "$Directory\ConfigMgr_Shutdown_Utility.vbs" $CopyDirectory -Force
		}
		elseif ($IfUserOnBoxText -eq "Cancel Shutdown") {
			Get-WmiObject -ComputerName $CompName -class Win32_OperatingSystem | ForEach-Object {$WinDirectory = $_.WindowsDirectory}
			$ShutdownCommand = "$WinDirectory\ConfigMgr_Shutdown_Utility.exe -arguments /s /t $Delay /Skip /Schtask `"$WinDirectory\ConfigMgr_Shutdown_Utility.exe`""
			$CopyDirectory = $WinDirectory.ToLower().replace("c:","\\$CompName\c$")
			Copy-Item "$Directory\ConfigMgr_Shutdown_Utility.exe" $CopyDirectory -Force
		}
	}
	else {$ActionSelected = $false}
	#endregion
	
	
	if ($Error[0]) {$Popup.Popup("Error copying Shutdown Utility to remote computer. `n`n$Error",0,"Error",16)}
	elseif ($ActionSelected -eq $false) {$Popup.Popup("Please select an action to take.",0,"Error",16)}
	elseif ($TaskName.Length -lt 1) {$Popup.Popup("Please enter a task name",0,"Error",16)}
	elseif ($StartDate -ge $EndDate) {$Popup.Popup("Please make sure the end date is after the start date",0,"Error",16)}
	else {
		$FreqText = $FreqBox.Text
		if ($FreqText -eq "Once") {
			$StartDate = $StartDateBox.Value
			$StartDate = "{0:MM/dd/yyyy}" -f [DateTime]$StartDate
			$StartTime = $StartTimeBox.Text
			$StartTimeArray = $StartTime.Split(":")
			if($StartTime.EndsWith("PM") -and $StartTimeArray[0] -ne 12){$StartTimeArray[0] = [int]$StartTimeArray[0] + 12}
			elseif($StartTime.EndsWith("AM") -and $StartTimeArray[0] -eq 12){$StartTimeArray[0] = [int]$StartTimeArray[0] - 12}
			$StartTimeHour = $StartTimeArray[0]
			$StartTimeMinute = $StartTimeArray[1]
			if ($StartTimeHour.Length -lt 2) {$StartTimeHour = "0" + $StartTimeHour}
			if ($StartTimeMinute.Length -lt 2) {$StartTimeMinute = "0" + $StartTimeMinute}
			#If the time to start is set for midnight or 12:01, the script will execute twice before self deleting the job
			if ($StartTimeHour -eq "00") {if ($StartTimeMinute -eq "00" -or $StartTimeMinute -eq "01") {$StartTimeMinute = "02"}}
			$StartTime = $StartTimeHour + ":" + $StartTimeMinute
			$Error.Clear()
			& cmd /c schtasks.exe /create /S "$CompName" /RU SYSTEM /SC ONCE /SD "$StartDate" /ST "$StartTime" /F /TN "$TaskName" /TR "`"$ShutdownCommand`""
			if ($Error[0]) {$Popup.Popup("Error creating task on remote machine...",0,"Error",16)}
			else {$Popup.Popup("Successfully created task on $CompName",0,"Successful",0)}
		}
		elseif ($FreqText -eq "Daily") {
			$StartDate = $StartDateBox.Value
			$EndDate = $EndDateBox.Value
			$StartDate = "{0:MM/dd/yyyy}" -f [DateTime]$StartDate
			$EndDate = "{0:MM/dd/yyyy}" -f [DateTime]$EndDate
			$StartTime = $StartTimeBox.Text
			$StartTimeArray = $StartTime.Split(":")
			if($StartTime.EndsWith("PM") -and $StartTimeArray[0] -ne 12){$StartTimeArray[0] = [int]$StartTimeArray[0] + 12}
			elseif($StartTime.EndsWith("AM") -and $StartTimeArray[0] -eq 12){$StartTimeArray[0] = [int]$StartTimeArray[0] - 12}
			$StartTimeHour = $StartTimeArray[0]
			$StartTimeMinute = $StartTimeArray[1]
			if ($StartTimeHour.Length -lt 2) {$StartTimeHour = "0" + $StartTimeHour}
			if ($StartTimeMinute.Length -lt 2) {$StartTimeMinute = "0" + $StartTimeMinute}
			if ($StartTimeHour -eq "00") {if ($StartTimeMinute -eq "00" -or $StartTimeMinute -eq "01") {$StartTimeMinute = "02"}}
			$StartTime = $StartTimeHour + ":" + $StartTimeMinute
			$Error.Clear()
			& cmd /c schtasks.exe /create /S "$CompName" /RU SYSTEM /SC DAILY /SD "$StartDate" /ST "$StartTime" /ED "$EndDate" /Z /F /TN "$TaskName" /TR "`"$ShutdownCommand`""
			if ($Error[0]) {$Popup.Popup("Error creating task on remote machine...",0,"Error",16)}
			else {$Popup.Popup("Successfully created task on $CompName",0,"Successful",0)}
		}
		elseif ($FreqText -eq "Weekly") {
			$StartDate = $StartDateBox.Value
			$EndDate = $EndDateBox.Value
			$StartDate = "{0:MM/dd/yyyy}" -f [DateTime]$StartDate
			$StartDay = "{0:dddd}" -f [DateTime]$StartDate
			$StartDay = $StartDay.ToUpper().Substring(0,3)
			$EndDate = "{0:MM/dd/yyyy}" -f [DateTime]$EndDate
			$StartTime = $StartTimeBox.Text
			$StartTimeArray = $StartTime.Split(":")
			if($StartTime.EndsWith("PM") -and $StartTimeArray[0] -ne 12){$StartTimeArray[0] = [int]$StartTimeArray[0] + 12}
			elseif($StartTime.EndsWith("AM") -and $StartTimeArray[0] -eq 12){$StartTimeArray[0] = [int]$StartTimeArray[0] - 12}
			$StartTimeHour = $StartTimeArray[0]
			$StartTimeMinute = $StartTimeArray[1]
			if ($StartTimeHour.Length -lt 2) {$StartTimeHour = "0" + $StartTimeHour}
			if ($StartTimeMinute.Length -lt 2) {$StartTimeMinute = "0" + $StartTimeMinute}
			if ($StartTimeHour -eq "00") {if ($StartTimeMinute -eq "00" -or $StartTimeMinute -eq "01") {$StartTimeMinute = "02"}}
			$StartTime = $StartTimeHour + ":" + $StartTimeMinute
			$Error.Clear()
			& cmd /c schtasks.exe /create /S "$CompName" /RU SYSTEM /SC WEEKLY /d $StartDay /SD "$StartDate" /ST "$StartTime" /ED "$EndDate" /Z /F /TN "$TaskName" /TR "`"$ShutdownCommand`""
			if ($Error[0]) {$Popup.Popup("Error creating task on remote machine...",0,"Error",16)}
			else {$Popup.Popup("Successfully created task on $CompName",0,"Successful",0)}
		}
		elseif ($FreqText -eq "Monthly (On Day)") {
			$StartDate = $StartDateBox.Value
			$EndDate = $EndDateBox.Value
			$StartDate = "{0:MM/dd/yyyy}" -f [DateTime]$StartDate
			$StartDay = "{0:dddd}" -f [DateTime]$StartDate
			$StartDay = $StartDay.ToUpper().Substring(0,3)
			$Modifier = $ModifierBox.Text
			$Modifier = $Modifier.ToUpper().Replace(" ","")
			$EndDate = "{0:MM/dd/yyyy}" -f [DateTime]$EndDate
			$StartTime = $StartTimeBox.Text
			$StartTimeArray = $StartTime.Split(":")
			if($StartTime.EndsWith("PM") -and $StartTimeArray[0] -ne 12){$StartTimeArray[0] = [int]$StartTimeArray[0] + 12}
			elseif($StartTime.EndsWith("AM") -and $StartTimeArray[0] -eq 12){$StartTimeArray[0] = [int]$StartTimeArray[0] - 12}
			$StartTimeHour = $StartTimeArray[0]
			$StartTimeMinute = $StartTimeArray[1]
			if ($StartTimeHour.Length -lt 2) {$StartTimeHour = "0" + $StartTimeHour}
			if ($StartTimeMinute.Length -lt 2) {$StartTimeMinute = "0" + $StartTimeMinute}
			if ($StartTimeHour -eq "00") {if ($StartTimeMinute -eq "00" -or $StartTimeMinute -eq "01") {$StartTimeMinute = "02"}}
			$StartTime = $StartTimeHour + ":" + $StartTimeMinute
			$Error.Clear()
			if ($Modifier -eq "LASTDAY") {& cmd /c schtasks.exe /create /S "$CompName" /RU SYSTEM /SC MONTHLY /MO $Modifier /M * /SD "$StartDate" /ST "$StartTime" /ED "$EndDate" /Z /F /TN "$TaskName" /TR "`"$ShutdownCommand`""}
			else {& cmd /c schtasks.exe /create /S "$CompName" /RU SYSTEM /SC MONTHLY /MO $Modifier /d $StartDay /SD "$StartDate" /ST "$StartTime" /ED "$EndDate" /Z /F /TN "$TaskName" /TR "`"$ShutdownCommand`""}
			if ($Error[0]) {$Popup.Popup("Error creating task on remote machine...",0,"Error",16)}
			else {$Popup.Popup("Successfully created task on $CompName",0,"Successful",0)}
		}
		elseif ($FreqText -eq "Monthly (On Date)") {
			$StartDate = $StartDateBox.Value
			$EndDate = $EndDateBox.Value
			$StartDate = "{0:MM/dd/yyyy}" -f [DateTime]$StartDate
			$StartDay = "{0:dd}" -f [DateTime]$StartDate
			$EndDate = "{0:MM/dd/yyyy}" -f [DateTime]$EndDate
			$StartTime = $StartTimeBox.Text
			$StartTimeArray = $StartTime.Split(":")
			if($StartTime.EndsWith("PM") -and $StartTimeArray[0] -ne 12){$StartTimeArray[0] = [int]$StartTimeArray[0] + 12}
			elseif($StartTime.EndsWith("AM") -and $StartTimeArray[0] -eq 12){$StartTimeArray[0] = [int]$StartTimeArray[0] - 12}
			$StartTimeHour = $StartTimeArray[0]
			$StartTimeMinute = $StartTimeArray[1]
			if ($StartTimeHour.Length -lt 2) {$StartTimeHour = "0" + $StartTimeHour}
			if ($StartTimeMinute.Length -lt 2) {$StartTimeMinute = "0" + $StartTimeMinute}
			if ($StartTimeHour -eq "00") {if ($StartTimeMinute -eq "00" -or $StartTimeMinute -eq "01") {$StartTimeMinute = "02"}}
			$StartTime = $StartTimeHour + ":" + $StartTimeMinute
			$Error.Clear()
			& cmd /c schtasks.exe /create /S "$CompName" /RU SYSTEM /SC MONTHLY /d $StartDay /SD "$StartDate" /ST "$StartTime" /ED "$EndDate" /Z /F /TN "$TaskName" /TR "`"$ShutdownCommand`""
			if ($Error[0]) {$Popup.Popup("Error creating task on remote machine...",0,"Error",16)}
			else {$Popup.Popup("Successfully created task on $CompName",0,"Successful",0)}
		}
		else {$Popup.Popup("Please select a Frequency...",0,"Error",16)}
	}
}
#endregion

#region Dropdown box selection changed

$ShutReb_Sel_Changed=
{
	$ShutRebText = $ShutRebBox.Text
	$IfUserOnBox.Items.Clear()
	$IfUserOnBox.Items.Add("$ShutRebText computer")|Out-Null
	$IfUserOnBox.Items.Add("Give user a prompt to cancel")|Out-Null
	$IfUserOnBox.Items.Add("Cancel $ShutRebText")|Out-Null
	$IfUserOnBox.SelectedItem = "$ShutRebText computer"
	$IfUserOnBox.enabled = $true
	$IfUserOnLbl.enabled = $true
	$DelayBox.enabled = $true
	$DelayLbl.enabled = $true
}

$Freq_Sel_Changed= 
{
	$FreqText = $FreqBox.Text
	if ($FreqText -eq "Monthly (On Day)"){
		$ModifierBox.enabled = $true
		$ModifierLbl.enabled = $true
		$StartDateLbl.enabled = $true
		$StartDateBox.enabled = $true
		$StartTimeLbl.enabled = $true
		$StartTimebox.enabled = $true
		$EndDateBox.enabled = $true
		$EndDatelbl.enabled = $true
	}
	elseif ($FreqText -eq "Once") {
		$ModifierLbl.enabled = $false
		$ModifierBox.enabled = $false
		$StartDateLbl.enabled = $true
		$StartDateBox.enabled = $true
		$StartTimeLbl.enabled = $true
		$StartTimebox.enabled = $true
		$EndDateBox.enabled = $false
		$EndDatelbl.enabled = $false
	}
	else {
		$ModifierLbl.enabled = $false
		$ModifierBox.enabled = $false
		$StartDateLbl.enabled = $true
		$StartDateBox.enabled = $true
		$StartTimeLbl.enabled = $true
		$StartTimebox.enabled = $true
		$EndDateBox.enabled = $true
		$EndDatelbl.enabled = $true	
	}
}
#endregion

$Cancel_Btn_Action= 
{
	$form1.close()
}

$About_Btn_Action= 
{
	$ArgList = @()
	$ArgList += @("`"$Directory\SilentOpenPS.vbs`"")
	$ArgList += @("`"$Directory\About.ps1`"")
	Start-Process wscript.exe -ArgumentList $ArgList
}

$OnLoadForm_StateCorrection=
{#Correct the initial state of the form to prevent the .Net maximized form issue
	$form1.WindowState = $InitialFormWindowState
	$CompColName.Text = "Schedule Restart/Shutdown - $CompName"
	$StartDateBox.MinDate = Get-Date
	$StartDateBox.Value = Get-Date
	$StartTimeBox.Value = Get-Date
	$EndDate = Get-Date
	$EndDate = $EndDate.AddDays(1)
	$EndDateBox.Value = $EndDate
	$EndDateBox.MinDate = $EndDate
	$EndDate = $null
	$StartDateLbl.enabled = $false
	$StartDateBox.enabled = $false
	$StartTimeLbl.enabled = $false
	$StartTimebox.enabled = $false
}

#----------------------------------------------
#region Generated Form Code
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 338
$System_Drawing_Size.Width = 551
$form1.ClientSize = $System_Drawing_Size
$form1.ControlBox = $False
$form1.DataBindings.DefaultDataSourceUpdateMode = 0
$form1.FormBorderStyle = 1
$form1.MaximizeBox = $False
$form1.MinimizeBox = $False
$form1.Name = "form1"
$form1.Text = "Schedule Restart/Shutdown"
$form1.add_Load($handler_form1_Load)

$ModifierBox.DataBindings.DefaultDataSourceUpdateMode = 0
$ModifierBox.DropDownStyle = 2
$ModifierBox.Enabled = $False
$ModifierBox.FlatStyle = 3
$ModifierBox.FormattingEnabled = $True
$ModifierBox.Items.Add("First")|Out-Null
$ModifierBox.Items.Add("Second")|Out-Null
$ModifierBox.Items.Add("Third")|Out-Null
$ModifierBox.Items.Add("Fourth")|Out-Null
$ModifierBox.Items.Add("Last")|Out-Null
$ModifierBox.Items.Add("Last Day")|Out-Null
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 97
$System_Drawing_Point.Y = 240
$ModifierBox.Location = $System_Drawing_Point
$ModifierBox.Name = "ModifierBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 121
$ModifierBox.Size = $System_Drawing_Size
$ModifierBox.TabIndex = 6

$form1.Controls.Add($ModifierBox)

$TaskNameBox.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 97
$System_Drawing_Point.Y = 273
$TaskNameBox.Location = $System_Drawing_Point
$TaskNameBox.Name = "TaskNameBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 121
$TaskNameBox.Size = $System_Drawing_Size
$TaskNameBox.TabIndex = 7
$TaskNameBox.Text = "ConfigMgr_Sch_Shutdown"

$form1.Controls.Add($TaskNameBox)

$TaskNmeLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 273
$TaskNmeLbl.Location = $System_Drawing_Point
$TaskNmeLbl.Name = "TaskNmeLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 79
$TaskNmeLbl.Size = $System_Drawing_Size
$TaskNmeLbl.TabIndex = 28
$TaskNmeLbl.Text = "Task Name"
$TaskNmeLbl.TextAlign = 16

$form1.Controls.Add($TaskNmeLbl)

$ModifierLbl.DataBindings.DefaultDataSourceUpdateMode = 0
$ModifierLbl.Enabled = $False

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 240
$ModifierLbl.Location = $System_Drawing_Point
$ModifierLbl.Name = "ModifierLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 79
$ModifierLbl.Size = $System_Drawing_Size
$ModifierLbl.TabIndex = 27
$ModifierLbl.Text = "Modifier"
$ModifierLbl.TextAlign = 16

$form1.Controls.Add($ModifierLbl)


$AboutBtn.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 306
$AboutBtn.Location = $System_Drawing_Point
$AboutBtn.Name = "AboutBtn"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$AboutBtn.Size = $System_Drawing_Size
$AboutBtn.TabIndex = 21
$AboutBtn.Text = "About"
$AboutBtn.UseVisualStyleBackColor = $True
$AboutBtn.add_Click($About_Btn_Action)
$AboutBtn.add_KeyPress($About_Btn_Action)

$form1.Controls.Add($AboutBtn)


$StartBtn.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 369
$System_Drawing_Point.Y = 306
$StartBtn.Location = $System_Drawing_Point
$StartBtn.Name = "StartBtn"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$StartBtn.Size = $System_Drawing_Size
$StartBtn.TabIndex = 10
$StartBtn.Text = "Start"
$StartBtn.UseVisualStyleBackColor = $True
$StartBtn.add_Click($Start_Btn_Action)
$StartBtn.add_KeyPress($Start_Btn_Action)

$form1.Controls.Add($StartBtn)


$CancelBtn.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 464
$System_Drawing_Point.Y = 306
$CancelBtn.Location = $System_Drawing_Point
$CancelBtn.Name = "CancelBtn"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$CancelBtn.Size = $System_Drawing_Size
$CancelBtn.TabIndex = 11
$CancelBtn.Text = "Cancel"
$CancelBtn.UseVisualStyleBackColor = $True
$CancelBtn.add_Click($Cancel_Btn_Action)
$CancelBtn.add_KeyPress($Cancel_Btn_Action)

$form1.Controls.Add($CancelBtn)

$DelayBox.DataBindings.DefaultDataSourceUpdateMode = 0
$DelayBox.Enabled = $False
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 369
$System_Drawing_Point.Y = 141
$DelayBox.Location = $System_Drawing_Point
$DelayBox.Name = "DelayBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 100
$DelayBox.Size = $System_Drawing_Size
$DelayBox.TabIndex = 9
$DelayBox.Text = "30"

$form1.Controls.Add($DelayBox)

$DelayLbl.DataBindings.DefaultDataSourceUpdateMode = 0
$DelayLbl.Enabled = $False

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 242
$System_Drawing_Point.Y = 141
$DelayLbl.Location = $System_Drawing_Point
$DelayLbl.Name = "DelayLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 121
$DelayLbl.Size = $System_Drawing_Size
$DelayLbl.TabIndex = 31
$DelayLbl.Text = "Delay (in seconds)"
$DelayLbl.TextAlign = 16

$form1.Controls.Add($DelayLbl)

$IfUserOnBox.DataBindings.DefaultDataSourceUpdateMode = 0
$IfUserOnBox.DropDownStyle = 2
$IfUserOnBox.Enabled = $False
$IfUserOnBox.FlatStyle = 3
$IfUserOnBox.FormattingEnabled = $True
$IfUserOnBox.Items.Add("$Action computer")|Out-Null
$IfUserOnBox.Items.Add("Give user a prompt to cancel")|Out-Null
$IfUserOnBox.Items.Add("Cancel $Action")|Out-Null
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 369
$System_Drawing_Point.Y = 109
$IfUserOnBox.Location = $System_Drawing_Point
$IfUserOnBox.Name = "IfUserOnBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 170
$IfUserOnBox.Size = $System_Drawing_Size
$IfUserOnBox.TabIndex = 8

$form1.Controls.Add($IfUserOnBox)

$IfUserOnLbl.DataBindings.DefaultDataSourceUpdateMode = 0
$IfUserOnLbl.Enabled = $False

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 242
$System_Drawing_Point.Y = 108
$IfUserOnLbl.Location = $System_Drawing_Point
$IfUserOnLbl.Name = "IfUserOnLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 121
$IfUserOnLbl.Size = $System_Drawing_Size
$IfUserOnLbl.TabIndex = 30
$IfUserOnLbl.Text = "If a user is logged on"
$IfUserOnLbl.TextAlign = 16

$form1.Controls.Add($IfUserOnLbl)

$ActionOptionsLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 242
$System_Drawing_Point.Y = 75
$ActionOptionsLbl.Location = $System_Drawing_Point
$ActionOptionsLbl.Name = "ActionOptionsLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 297
$ActionOptionsLbl.Size = $System_Drawing_Size
$ActionOptionsLbl.TabIndex = 29
$ActionOptionsLbl.Text = "Shutdown / Restart Options"
$ActionOptionsLbl.TextAlign = 32

$form1.Controls.Add($ActionOptionsLbl)

$SchTasksLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 75
$SchTasksLbl.Location = $System_Drawing_Point
$SchTasksLbl.Name = "SchTasksLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 206
$SchTasksLbl.Size = $System_Drawing_Size
$SchTasksLbl.TabIndex = 22
$SchTasksLbl.Text = "Scheduled Task Options"
$SchTasksLbl.TextAlign = 32

$form1.Controls.Add($SchTasksLbl)

$EndDateBox.DataBindings.DefaultDataSourceUpdateMode = 0
$EndDateBox.Enabled = $False
$EndDateBox.Format = 2
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 97
$System_Drawing_Point.Y = 207
$EndDateBox.Location = $System_Drawing_Point
$EndDateBox.Name = "EndDateBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 121
$EndDateBox.Size = $System_Drawing_Size
$EndDateBox.TabIndex = 5

$form1.Controls.Add($EndDateBox)

$EndDateLbl.DataBindings.DefaultDataSourceUpdateMode = 0
$EndDateLbl.Enabled = $False

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 207
$EndDateLbl.Location = $System_Drawing_Point
$EndDateLbl.Name = "EndDateLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 79
$EndDateLbl.Size = $System_Drawing_Size
$EndDateLbl.TabIndex = 26
$EndDateLbl.Text = "End Date"
$EndDateLbl.TextAlign = 16

$form1.Controls.Add($EndDateLbl)

$FreqBox.DataBindings.DefaultDataSourceUpdateMode = 0
$FreqBox.DropDownStyle = 2
$FreqBox.FlatStyle = 3
$FreqBox.FormattingEnabled = $True
$FreqBox.Items.Add("Once")|Out-Null
$FreqBox.Items.Add("Daily")|Out-Null
$FreqBox.Items.Add("Weekly")|Out-Null
$FreqBox.Items.Add("Monthly (On Date)")|Out-Null
$FreqBox.Items.Add("Monthly (On Day)")|Out-Null
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 97
$System_Drawing_Point.Y = 108
$FreqBox.Location = $System_Drawing_Point
$FreqBox.Name = "FreqBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 121
$FreqBox.Size = $System_Drawing_Size
$FreqBox.TabIndex = 2
$FreqBox.add_SelectedIndexChanged($Freq_Sel_Changed)

$form1.Controls.Add($FreqBox)

$FrequencyLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 108
$FrequencyLbl.Location = $System_Drawing_Point
$FrequencyLbl.Name = "FrequencyLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 79
$FrequencyLbl.Size = $System_Drawing_Size
$FrequencyLbl.TabIndex = 23
$FrequencyLbl.Text = "Frequency"
$FrequencyLbl.TextAlign = 16

$form1.Controls.Add($FrequencyLbl)

$RestartShutdownLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 178
$System_Drawing_Point.Y = 42
$RestartShutdownLbl.Location = $System_Drawing_Point
$RestartShutdownLbl.Name = "RestartShutdownLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 79
$RestartShutdownLbl.Size = $System_Drawing_Size
$RestartShutdownLbl.TabIndex = 21
$RestartShutdownLbl.Text = "Action to take:"
$RestartShutdownLbl.TextAlign = 16

$form1.Controls.Add($RestartShutdownLbl)

$StartTimeBox.DataBindings.DefaultDataSourceUpdateMode = 0
$StartTimeBox.Format = 4
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 97
$System_Drawing_Point.Y = 174
$StartTimeBox.Location = $System_Drawing_Point
$StartTimeBox.Name = "StartTimeBox"
$StartTimeBox.ShowUpDown = $True
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 121
$StartTimeBox.Size = $System_Drawing_Size
$StartTimeBox.TabIndex = 4

$form1.Controls.Add($StartTimeBox)

$StartTimeLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 174
$StartTimeLbl.Location = $System_Drawing_Point
$StartTimeLbl.Name = "StartTimeLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 79
$StartTimeLbl.Size = $System_Drawing_Size
$StartTimeLbl.TabIndex = 25
$StartTimeLbl.Text = "Start Time"
$StartTimeLbl.TextAlign = 16

$form1.Controls.Add($StartTimeLbl)

$StartDateLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 141
$StartDateLbl.Location = $System_Drawing_Point
$StartDateLbl.Name = "StartDateLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 79
$StartDateLbl.Size = $System_Drawing_Size
$StartDateLbl.TabIndex = 24
$StartDateLbl.Text = "Start Date"
$StartDateLbl.TextAlign = 16

$form1.Controls.Add($StartDateLbl)

$StartDateBox.DataBindings.DefaultDataSourceUpdateMode = 0
$StartDateBox.Format = 2
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 97
$System_Drawing_Point.Y = 141
$StartDateBox.Location = $System_Drawing_Point
$StartDateBox.Name = "StartDateBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 121
$StartDateBox.Size = $System_Drawing_Size
$StartDateBox.TabIndex = 3
$StartDateBox.Value = "2013-02-17"

$form1.Controls.Add($StartDateBox)

$ShutRebBox.DataBindings.DefaultDataSourceUpdateMode = 0
$ShutRebBox.DropDownStyle = 2
$ShutRebBox.FlatStyle = 3
$ShutRebBox.FormattingEnabled = $True
$ShutRebBox.Items.Add("Restart")|Out-Null
$ShutRebBox.Items.Add("Shutdown")|Out-Null
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 278
$System_Drawing_Point.Y = 42
$ShutRebBox.Location = $System_Drawing_Point
$ShutRebBox.Name = "ShutRebBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 121
$ShutRebBox.Size = $System_Drawing_Size
$ShutRebBox.TabIndex = 0
$ShutRebBox.add_SelectedIndexChanged($ShutReb_Sel_Changed)

$form1.Controls.Add($ShutRebBox)

$CompColName.Anchor = 13
$CompColName.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 9
$CompColName.Location = $System_Drawing_Point
$CompColName.Name = "CompColName"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 522
$CompColName.Size = $System_Drawing_Size
$CompColName.TabIndex = 20
$CompColName.Text = "$CompColName"
$CompColName.TextAlign = 32

$form1.Controls.Add($CompColName)

#endregion Generated Form Code

#Save the initial state of the form
$InitialFormWindowState = $form1.WindowState
#Init the OnLoad event to correct the initial state of the form
$form1.add_Load($OnLoadForm_StateCorrection)
#Show the Form
$form1.ShowDialog()| Out-Null

} #End Function

if (Test-Connection $CompName -Count 1) {GenerateForm}
else {$Popup.Popup("Error, cannot ping $CompName",0,"Error",16)}