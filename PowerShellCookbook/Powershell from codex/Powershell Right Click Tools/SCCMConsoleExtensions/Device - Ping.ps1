<#
Written by Ryan Ephgrave for ConfigMgr 2012 Right Click Tools
http://psrightclicktools.codeplex.com/
GUI Generated By: SAPIEN Technologies PrimalForms (Community Edition) v1.0.10.0
#>

$ResourceID = $args[0]
$Server = $args[1]
$Namespace = $args[2]

$strQuery = "Select ResourceID,ResourceNames from SMS_R_System where ResourceID='$ResourceID'"
Get-WmiObject -Query $strQuery -Namespace $Namespace -ComputerName $Server | ForEach-Object {$CompName = $_.ResourceNames[0]}

$script:CancelAction = $false
$Popup = new-object -comobject wscript.shell
$GetDirectory = $MyInvocation.MyCommand.path
$Directory = Split-Path $GetDirectory

function GenerateForm {

#region Import the Assemblies
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
[reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null
#endregion

#region Generated Form Objects
$form1 = New-Object System.Windows.Forms.Form
$StopCloseBtn = New-Object System.Windows.Forms.Button
$AboutBtn = New-Object System.Windows.Forms.Button
$PingStatsLbl = New-Object System.Windows.Forms.Label
$PingResults = New-Object System.Windows.Forms.DataGridView
$InitialFormWindowState = New-Object System.Windows.Forms.FormWindowState
#endregion Generated Form Objects

#----------------------------------------------
#Generated Event Script Blocks
#----------------------------------------------
#Provide Custom Code for events specified in PrimalForms.
$About_Select= 
{
	$ArgList = @()
	$ArgList += @("`"$Directory\SilentOpenPS.vbs`"")
	$ArgList += @("`"$Directory\About.ps1`"")
	Start-Process wscript.exe -ArgumentList $ArgList
}

$StopClose_Select= 
{
	$StopCloseText = $StopCloseBtn.Text
	if ($StopCloseText -eq "Stop") {
		$script:CancelAction = $true
		$StopCloseBtn.Text = "Close"
	}
	else {
		$ProcessID = [System.Diagnostics.Process]::GetCurrentProcess()
		$ProcID = $ProcessID.ID
		& taskkill /PID $ProcID /T /F
	}
}

$OnLoadForm_StateCorrection=
{
	$form1.WindowState = $InitialFormWindowState
	$StopCloseBtn.Text = "Stop"
	$NumSuccess = 0
	$NumUnsuccess = 0
	$Count = 0
	$IP = $null
	$MinResTime = $null
	$MaxResTime = $null
	$AverageResTime = $null
	$TotalResTime = 0
	do {
		[System.Windows.Forms.Application]::DoEvents()
		if ($script:CancelAction -ne $true) {
			$Count++
			$ResponseTime = $null
			$ReplySize = $null
			$TTL = $null
			$StatusCode = $null
			$strQuery = "Select * from Win32_PingStatus where Address='$CompName'" 
			$ping = Get-WmiObject -query $strQuery
			$IP = $ping.IPV4Address.IPAddressToString
			$ReplySize = $ping.ReplySize
			$ResponseTime = $ping.ResponseTime | Out-String
			$ResponseTimeText = $ResponseTime + "ms"
			$TTL = $ping.ResponseTimeToLive
			$StatusCode = $ping.StatusCode
			if ($StatusCode -eq 0) {
				$NumSuccess++
				$PingResults.Rows.Add($IP,"Successful",$ReplySize,$ResponseTimeText,$TTL)
				$PercentLoss = ($NumUnsuccess / $Count) * 100
				$PercentLoss = [Math]::Round($PercentLoss, 0)
				if ($ResponseTime -gt $MaxResTime -or $MaxResTime -eq $null) {$MaxResTime = $ResponseTime}
				if ($ResponseTime -lt $MinResTime -or $MinResTime -eq $null) {$MinResTime = $ResponseTime}
				$TotalResTime = $TotalResTime + $ResponseTime
				$AverageResTime = $TotalResTime / $NumSuccess
				$AverageResTime = [Math]::Round($AverageResTime, 2)
				$MinResTimeText = $MinResTime | Out-String
				$MinResTimeText = $MinResTimeText.replace("`n","")
				$MaxResTimeText = $MaxResTime | Out-String
				$MaxResTimeText = $MaxResTimeText.replace("`n","")
				$PingLabel = "Ping statistics for $IP" + ":`n`tPackets: Sent = $count" + ", Successful = $NumSuccess" + ", Unsuccessful = $NumUnsuccess (" + $PercentLoss + "% loss),`nApproximage round trip in milli-seconds:`nMinimum = $MinResTimeText" + "ms, Maximum = $MaxResTimeText" + "ms, Average = $AverageResTime" + "ms"
				$PingStatsLbl.Text = $PingLabel
			}
			else {
				$NumUnsuccess++
				$PingResults.Rows.Add($IP,"Unsuccessful")
				$PercentLoss = ($NumUnsuccess / $Count) * 100
				$PercentLoss = [Math]::Round($PercentLoss, 2)
				$TotalResTime = $TotalResTime + $ResponseTime
				$MinResTimeText = $MinResTime | Out-String
				$MinResTimeText = $MinResTimeText.replace("`n","")
				$MaxResTimeText = $MaxResTime | Out-String
				$MaxResTimeText = $MaxResTimeText.replace("`n","")
				$PingLabel = "Ping statistics for $IP" + ":`n`tPackets: Sent = $count" + ", Successful = $NumSuccess" + ", Unsuccessful = $NumUnsuccess (" + $PercentLoss + "% loss),`nApproximage round trip in milli-seconds:`nMinimum = $MinResTimeText" + "ms, Maximum = $MaxResTimeText" + "ms, Average = $AverageResTime" + "ms"
				$PingStatsLbl.Text = $PingLabel
			}
			$PingResults.FirstDisplayedScrollingRowIndex = $PingResults.RowCount - 1
			Start-Sleep -Milliseconds 500
		}
	} while ($script:CancelAction -ne $true)
}

#----------------------------------------------
#region Generated Form Code
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 322
$System_Drawing_Size.Width = 438
$form1.ClientSize = $System_Drawing_Size
$form1.ControlBox = $False
$form1.DataBindings.DefaultDataSourceUpdateMode = 0
$form1.Name = "form1"
$form1.Text = "Ping $CompName"

$StopCloseBtn.Anchor = 10

$StopCloseBtn.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 351
$System_Drawing_Point.Y = 287
$StopCloseBtn.Location = $System_Drawing_Point
$StopCloseBtn.Name = "StopCloseBtn"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$StopCloseBtn.Size = $System_Drawing_Size
$StopCloseBtn.TabIndex = 3
$StopCloseBtn.Text = "Close"
$StopCloseBtn.UseVisualStyleBackColor = $True
$StopCloseBtn.add_Click($StopClose_Select)
$StopCloseBtn.add_KeyPress($StopClose_Select)

$form1.Controls.Add($StopCloseBtn)

$AboutBtn.Anchor = 6

$AboutBtn.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 287
$AboutBtn.Location = $System_Drawing_Point
$AboutBtn.Name = "AboutBtn"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$AboutBtn.Size = $System_Drawing_Size
$AboutBtn.TabIndex = 2
$AboutBtn.Text = "About"
$AboutBtn.UseVisualStyleBackColor = $True
$AboutBtn.add_Click($About_Select)
$AboutBtn.add_KeyPress($About_Select)

$form1.Controls.Add($AboutBtn)

$PingStatsLbl.Anchor = 14
$PingStatsLbl.BorderStyle = 1
$PingStatsLbl.DataBindings.DefaultDataSourceUpdateMode = 0
$PingStatsLbl.Font = New-Object System.Drawing.Font("Microsoft Sans Serif",9.75,0,3,0)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 204
$PingStatsLbl.Location = $System_Drawing_Point
$PingStatsLbl.Name = "PingStatsLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 80
$System_Drawing_Size.Width = 414
$PingStatsLbl.Size = $System_Drawing_Size
$PingStatsLbl.TabIndex = 1

$form1.Controls.Add($PingStatsLbl)

$PingResults.AllowUserToAddRows = $False
$PingResults.AllowUserToDeleteRows = $False
$PingResults.AllowUserToResizeRows = $False
$PingResults.Anchor = 15
$PingResults.ClipboardCopyMode = 2
$PingResults.ColumnHeadersHeightSizeMode = 1
$System_Windows_Forms_DataGridViewTextBoxColumn_14 = New-Object System.Windows.Forms.DataGridViewTextBoxColumn
$System_Windows_Forms_DataGridViewTextBoxColumn_14.HeaderText = "Reply From"
$System_Windows_Forms_DataGridViewTextBoxColumn_14.Name = ""
$System_Windows_Forms_DataGridViewTextBoxColumn_14.ReadOnly = $True
$System_Windows_Forms_DataGridViewTextBoxColumn_14.Width = 100

$PingResults.Columns.Add($System_Windows_Forms_DataGridViewTextBoxColumn_14)|Out-Null
$System_Windows_Forms_DataGridViewTextBoxColumn_15 = New-Object System.Windows.Forms.DataGridViewTextBoxColumn
$System_Windows_Forms_DataGridViewTextBoxColumn_15.HeaderText = "Status"
$System_Windows_Forms_DataGridViewTextBoxColumn_15.Name = ""
$System_Windows_Forms_DataGridViewTextBoxColumn_15.ReadOnly = $True
$System_Windows_Forms_DataGridViewTextBoxColumn_15.Width = 100

$PingResults.Columns.Add($System_Windows_Forms_DataGridViewTextBoxColumn_15)|Out-Null
$System_Windows_Forms_DataGridViewTextBoxColumn_16 = New-Object System.Windows.Forms.DataGridViewTextBoxColumn
$System_Windows_Forms_DataGridViewTextBoxColumn_16.HeaderText = "Bytes"
$System_Windows_Forms_DataGridViewTextBoxColumn_16.Name = ""
$System_Windows_Forms_DataGridViewTextBoxColumn_16.ReadOnly = $True
$System_Windows_Forms_DataGridViewTextBoxColumn_16.Width = 50

$PingResults.Columns.Add($System_Windows_Forms_DataGridViewTextBoxColumn_16)|Out-Null
$System_Windows_Forms_DataGridViewTextBoxColumn_17 = New-Object System.Windows.Forms.DataGridViewTextBoxColumn
$System_Windows_Forms_DataGridViewTextBoxColumn_17.HeaderText = "Time"
$System_Windows_Forms_DataGridViewTextBoxColumn_17.Name = ""
$System_Windows_Forms_DataGridViewTextBoxColumn_17.ReadOnly = $True
$System_Windows_Forms_DataGridViewTextBoxColumn_17.Width = 50

$PingResults.Columns.Add($System_Windows_Forms_DataGridViewTextBoxColumn_17)|Out-Null
$System_Windows_Forms_DataGridViewTextBoxColumn_18 = New-Object System.Windows.Forms.DataGridViewTextBoxColumn
$System_Windows_Forms_DataGridViewTextBoxColumn_18.HeaderText = "TTL"
$System_Windows_Forms_DataGridViewTextBoxColumn_18.Name = ""
$System_Windows_Forms_DataGridViewTextBoxColumn_18.ReadOnly = $True
$System_Windows_Forms_DataGridViewTextBoxColumn_18.Width = 50

$PingResults.Columns.Add($System_Windows_Forms_DataGridViewTextBoxColumn_18)|Out-Null
$PingResults.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 12
$PingResults.Location = $System_Drawing_Point
$PingResults.Name = "PingResults"
$PingResults.ReadOnly = $True
$PingResults.RowHeadersVisible = $False
$PingResults.RowHeadersWidthSizeMode = 1
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 189
$System_Drawing_Size.Width = 414
$PingResults.Size = $System_Drawing_Size
$PingResults.TabIndex = 0

$form1.Controls.Add($PingResults)

#endregion Generated Form Code

#Save the initial state of the form
$InitialFormWindowState = $form1.WindowState
#Init the OnLoad event to correct the initial state of the form
$form1.add_Load($OnLoadForm_StateCorrection)
#Show the Form
$form1.ShowDialog()| Out-Null

}

GenerateForm
