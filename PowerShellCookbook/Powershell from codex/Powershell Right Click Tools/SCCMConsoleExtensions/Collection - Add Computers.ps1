<#
Written by Ryan Ephgrave for ConfigMgr 2012 Right Click Tools
http://psrightclicktools.codeplex.com/
GUI Generated By: SAPIEN Technologies PrimalForms (Community Edition) v1.0.10.0
#>

$ColID = $args[0]
$ColName = $args[1]
$Server = $args[2]
$Namespace = $args[3]

$script:CancelAction = $false
$Popup = new-object -comobject wscript.shell

$GetDirectory = $MyInvocation.MyCommand.path
$Directory = Split-Path $GetDirectory


#Generated Form Function
function GenerateForm {

#region Import the Assemblies
[reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
#endregion

#region Generated Form Objects
$AddDirRuleForm = New-Object System.Windows.Forms.Form
$CloseBtn = New-Object System.Windows.Forms.Button
$ResultsLbl = New-Object System.Windows.Forms.Label
$StartBtn = New-Object System.Windows.Forms.Button
$AboutBtn = New-Object System.Windows.Forms.Button
$ResultsBox = New-Object System.Windows.Forms.ListBox
$LogBox = New-Object System.Windows.Forms.RichTextBox
$CompListLbl = New-Object System.Windows.Forms.Label
$ColNameLbl = New-Object System.Windows.Forms.Label
$CompListBox = New-Object System.Windows.Forms.RichTextBox
$InitialFormWindowState = New-Object System.Windows.Forms.FormWindowState
#endregion Generated Form Objects

#----------------------------------------------
#Generated Event Script Blocks
#----------------------------------------------
#Provide Custom Code for events specified in PrimalForms.
$AboutBtn_OnClick= 
{
	$ArgList = @()
	$ArgList += @("`"$Directory\SilentOpenPS.vbs`"")
	$ArgList += @("`"$Directory\About.ps1`"")
	Start-Process wscript.exe -ArgumentList $ArgList
}

$CloseBtn_OnClick= 
{
	$AddDirRuleForm.Close()
}

$StartBtn_OnClick= 
{
	$RulesToSkip = $null
	$PopupAnswer = $Popup.Popup("Do you want to add these computers to $colname?",0,"Are you sure?",1)
	if ($PopupAnswer -eq 1) {
		$CurrTime = Get-Date
		$CurrentTime = $CurrTime.ToLongTimeString()
		$LogText = "$CurrentTime - Checking if any rules already exist..."
		$LogBox.Text = $LogBox.Text + $LogText + "`n"
		$LogScrollTo = $LogBox.Text.Length - 250
		$LogBox.Select($LogScrollTo,0)
		$LogBox.ScrollToCaret()
		foreach ($instance in $CompListBox){
			$compnames = $instance.text
			$CompNameArray = $compnames.split("`n")
		}
		$CompNameArray = $CompNameArray | select -Unique
		$strQuery = "Select * from SMS_Collection where CollectionID = '$ColID'"
		$Collection = Get-WmiObject -query $strQuery -ComputerName $Server -Namespace $Namespace
		$Collection.Get()
		$Rules = $Collection.CollectionRules
		foreach ($Rule in $Rules) {
			$RuleClass = $Rule.__CLASS
			if ($RuleClass -eq "SMS_CollectionRuleDirect") {
				$RuleName = $Rule.RuleName
				if ($CompNameArray -contains $RuleName) {$RulesToSkip += @($RuleName)}
			}
		}
		$CurrTime = Get-Date
		$CurrentTime = $CurrTime.ToLongTimeString()
		$LogText = "$CurrentTime - Starting to add rules..."
		$LogBox.Text = $LogBox.Text + $LogText + "`n"
		$LogScrollTo = $LogBox.Text.Length - 250
		$LogBox.Select($LogScrollTo,0)
		$LogBox.ScrollToCaret()
		foreach ($CompName in $CompNameArray) {
			if ($RulesToSkip -contains $CompName) {
				$CurrTime = Get-Date
				$CurrentTime = $CurrTime.ToLongTimeString()
				$LogText = "$CurrentTime - Skipping $CompName - Rule Already Exists..."
				$LogBox.Text = $LogBox.Text + $LogText + "`n"
				$LogScrollTo = $LogBox.Text.Length - 250
				$LogBox.Select($LogScrollTo,0)
				$LogBox.ScrollToCaret()
				$ResultsBox.Items.Add("$CompName - Rule Already Exists")
			}
			else {
				if ($CompName -ne $null) {
					$strQuery = "Select * from SMS_R_System where Name like '$CompName'"
					Get-WmiObject -Query $strQuery -Namespace $Namespace -ComputerName $Server | ForEach-Object {
						$ResourceID = $_.ResourceID
						$RuleName = $_.Name
						if ($ResourceID -ne $null) {
							$Error.Clear()
							$Collection=[WMI]"\\$($Server)\$($Namespace):SMS_Collection.CollectionID='$ColID'"
							$RuleClass = [wmiclass]"\\$($Server)\$($NameSpace):SMS_CollectionRuleDirect"
							$newRule = $ruleClass.CreateInstance()
							$newRule.RuleName = $RuleName
							$newRule.ResourceClassName = "SMS_R_System"
							$newRule.ResourceID = $ResourceID
							$Collection.AddMembershipRule($newRule)
							if ($Error[0]) {
								$CurrTime = Get-Date
								$CurrentTime = $CurrTime.ToLongTimeString()
								$LogText = "$CurrentTime - Error Adding $CompName - $Error..."
								$LogBox.Text = $LogBox.Text + $LogText + "`n"
								$LogScrollTo = $LogBox.Text.Length - 250
								$LogBox.Select($LogScrollTo,0)
								$LogBox.ScrollToCaret()
								$ResultsBox.Items.Add("$CompName - Error")
							}
							else {
								$CurrTime = Get-Date
								$CurrentTime = $CurrTime.ToLongTimeString()
								$LogText = "$CurrentTime - Successfully Added $CompName"
								$LogBox.Text = $LogBox.Text + $LogText + "`n"
								$LogScrollTo = $LogBox.Text.Length - 250
								$LogBox.Select($LogScrollTo,0)
								$LogBox.ScrollToCaret()
								$ResultsBox.Items.Add("$CompName - Successful")
							}
						}
						else {
							$CurrTime = Get-Date
							$CurrentTime = $CurrTime.ToLongTimeString()
							$LogText = "$CurrentTime - Could not find a Resource ID for $CompName"
							$LogBox.Text = $LogBox.Text + $LogText + "`n"
							$LogScrollTo = $LogBox.Text.Length - 250
							$LogBox.Select($LogScrollTo,0)
							$LogBox.ScrollToCaret()
							$ResultsBox.Items.Add("$CompName - No Resource ID")
						}
					}
					if ($ResourceID -eq $null) {
						$CurrTime = Get-Date
						$CurrentTime = $CurrTime.ToLongTimeString()
						$LogText = "$CurrentTime - Could not find a Resource ID for $CompName"
						$LogBox.Text = $LogBox.Text + $LogText + "`n"
						$LogScrollTo = $LogBox.Text.Length - 250
						$LogBox.Select($LogScrollTo,0)
						$LogBox.ScrollToCaret()
						$ResultsBox.Items.Add("$CompName - No Resource ID")
					}
				}
			}
		}
	}
	$CurrTime = Get-Date
	$CurrentTime = $CurrTime.ToLongTimeString()
	$LogText = "$CurrentTime - Finished!"
	$LogBox.Text = $LogBox.Text + $LogText + "`n"
	$LogScrollTo = $LogBox.Text.Length - 250
	$LogBox.Select($LogScrollTo,0)
	$LogBox.ScrollToCaret()

}

$OnLoadForm_StateCorrection=
{#Correct the initial state of the form to prevent the .Net maximized form issue
	$AddDirRuleForm.WindowState = $InitialFormWindowState
}

#----------------------------------------------
#region Generated Form Code
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 485
$System_Drawing_Size.Width = 408
$AddDirRuleForm.ClientSize = $System_Drawing_Size
$AddDirRuleForm.DataBindings.DefaultDataSourceUpdateMode = 0
$AddDirRuleForm.FormBorderStyle = 1
$AddDirRuleForm.MaximizeBox = $False
$AddDirRuleForm.Name = "AddDirRuleForm"
$AddDirRuleForm.Text = "Add Direct Rules"


$CloseBtn.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 321
$System_Drawing_Point.Y = 450
$CloseBtn.Location = $System_Drawing_Point
$CloseBtn.Name = "CloseBtn"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$CloseBtn.Size = $System_Drawing_Size
$CloseBtn.TabIndex = 8
$CloseBtn.Text = "Close"
$CloseBtn.UseVisualStyleBackColor = $True
$CloseBtn.add_Click($CloseBtn_OnClick)

$AddDirRuleForm.Controls.Add($CloseBtn)

$ResultsLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 183
$System_Drawing_Point.Y = 43
$ResultsLbl.Location = $System_Drawing_Point
$ResultsLbl.Name = "ResultsLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 213
$ResultsLbl.Size = $System_Drawing_Size
$ResultsLbl.TabIndex = 7
$ResultsLbl.Text = "Results"
$ResultsLbl.TextAlign = 32

$AddDirRuleForm.Controls.Add($ResultsLbl)


$StartBtn.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 240
$System_Drawing_Point.Y = 450
$StartBtn.Location = $System_Drawing_Point
$StartBtn.Name = "StartBtn"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$StartBtn.Size = $System_Drawing_Size
$StartBtn.TabIndex = 6
$StartBtn.Text = "Start"
$StartBtn.UseVisualStyleBackColor = $True
$StartBtn.add_Click($StartBtn_OnClick)

$AddDirRuleForm.Controls.Add($StartBtn)


$AboutBtn.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 450
$AboutBtn.Location = $System_Drawing_Point
$AboutBtn.Name = "AboutBtn"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$AboutBtn.Size = $System_Drawing_Size
$AboutBtn.TabIndex = 5
$AboutBtn.Text = "About"
$AboutBtn.UseVisualStyleBackColor = $True
$AboutBtn.add_Click($AboutBtn_OnClick)

$AddDirRuleForm.Controls.Add($AboutBtn)

$ResultsBox.DataBindings.DefaultDataSourceUpdateMode = 0
$ResultsBox.FormattingEnabled = $True
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 183
$System_Drawing_Point.Y = 69
$ResultsBox.Location = $System_Drawing_Point
$ResultsBox.Name = "ResultsBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 264
$System_Drawing_Size.Width = 213
$ResultsBox.Size = $System_Drawing_Size
$ResultsBox.TabIndex = 4

$AddDirRuleForm.Controls.Add($ResultsBox)

$LogBox.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 10
$System_Drawing_Point.Y = 348
$LogBox.Location = $System_Drawing_Point
$LogBox.Name = "LogBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 96
$System_Drawing_Size.Width = 386
$LogBox.Size = $System_Drawing_Size
$LogBox.TabIndex = 3
$LogBox.Text = ""

$AddDirRuleForm.Controls.Add($LogBox)

$CompListLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 43
$CompListLbl.Location = $System_Drawing_Point
$CompListLbl.Name = "CompListLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 154
$CompListLbl.Size = $System_Drawing_Size
$CompListLbl.TabIndex = 2
$CompListLbl.Text = "Computer List"
$CompListLbl.TextAlign = 32

$AddDirRuleForm.Controls.Add($CompListLbl)

$ColNameLbl.Anchor = 13
$ColNameLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 9
$ColNameLbl.Location = $System_Drawing_Point
$ColNameLbl.Name = "ColNameLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 384
$ColNameLbl.Size = $System_Drawing_Size
$ColNameLbl.TabIndex = 1
$ColNameLbl.Text = "$Colname"
$ColNameLbl.TextAlign = 32

$AddDirRuleForm.Controls.Add($ColNameLbl)

$CompListBox.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 69
$CompListBox.Location = $System_Drawing_Point
$CompListBox.Name = "CompListBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 264
$System_Drawing_Size.Width = 154
$CompListBox.Size = $System_Drawing_Size
$CompListBox.TabIndex = 0
$CompListBox.Text = ""
$CompListBox.WordWrap = $False

$AddDirRuleForm.Controls.Add($CompListBox)

#endregion Generated Form Code

#Save the initial state of the form
$InitialFormWindowState = $AddDirRuleForm.WindowState
#Init the OnLoad event to correct the initial state of the form
$AddDirRuleForm.add_Load($OnLoadForm_StateCorrection)
#Show the Form
$AddDirRuleForm.ShowDialog()| Out-Null

} #End Function

#Call the Function
GenerateForm
