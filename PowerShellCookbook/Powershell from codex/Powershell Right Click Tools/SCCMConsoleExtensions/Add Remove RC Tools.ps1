<#
Written by Ryan Ephgrave for ConfigMgr 2012 Right Click Tools
http://psrightclicktools.codeplex.com/
GUI Generated By: SAPIEN Technologies PrimalForms (Community Edition) v1.0.10.0
#>

$GetDirectory = $MyInvocation.MyCommand.path
$Directory = Split-Path $GetDirectory

$Popup = new-object -comobject wscript.shell

function GenerateForm {

#region Import the Assemblies
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
[reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null
#endregion

#region Generated Form Objects
$form1 = New-Object System.Windows.Forms.Form
$HintLbl = New-Object System.Windows.Forms.Label
$AboutBtn = New-Object System.Windows.Forms.Button
$DefaultBtn = New-Object System.Windows.Forms.Button
$CloseBtn = New-Object System.Windows.Forms.Button
$SaveBtn = New-Object System.Windows.Forms.Button
$IconBox = New-Object System.Windows.Forms.ComboBox
$IconLbl = New-Object System.Windows.Forms.Label
$ParamBox = New-Object System.Windows.Forms.TextBox
$ParamLbl = New-Object System.Windows.Forms.Label
$ExeBox = New-Object System.Windows.Forms.TextBox
$ExeLbl = New-Object System.Windows.Forms.Label
$DescriptionBox = New-Object System.Windows.Forms.TextBox
$DescriptionLbl = New-Object System.Windows.Forms.Label
$NameBox = New-Object System.Windows.Forms.TextBox
$Namelbl = New-Object System.Windows.Forms.Label
$MenuLbl = New-Object System.Windows.Forms.Label
$Add = New-Object System.Windows.Forms.Button
$RCMenuView = New-Object System.Windows.Forms.TreeView
$RCToolsLbl = New-Object System.Windows.Forms.Label
$ContextMenuStrip = New-Object System.Windows.Forms.ContextMenuStrip
$InitialFormWindowState = New-Object System.Windows.Forms.FormWindowState
#endregion Generated Form Objects

$Move_Up=
{
	$newIndex = $RCMenuView.SelectedNode.Index
	$tempNode = $RCMenuView.SelectedNode.PrevNode
	$RCMenuView.SelectedNode.PrevNode.Remove()
	$RCMenuView.SelectedNode.Parent.Nodes.Insert($newIndex , $tempNode)
}

$Move_Down=
{
	$newIndex = $RCMenuView.SelectedNode.Index
	$tempNode = $RCMenuView.SelectedNode.NextNode
	$RCMenuView.SelectedNode.NextNode.Remove()
	$RCMenuView.SelectedNode.Parent.Nodes.Insert($newIndex , $tempNode)
}

$Add_Separator=
{
	$SelectedNodeIndex = $RCMenuView.SelectedNode.Index
	$newNode = New-Object System.Windows.Forms.TreeNode
	$newNode.Text = "--Separator--"
	$newNode.Name = "--Separator--"
	$newNode.Tag = "--Separator-->>>>>--None--"
	$RCMenuView.SelectedNode.Parent.Nodes.Insert($SelectedNodeIndex , $newNode)
}

$Add_Tool=
{
	$TagText = $null
	$TagText = $RCMenuView.SelectedNode.Tag
	$SelectedNodeIndex = $RCMenuView.SelectedNode.Index
	if ($TagText.contains(">RootMenu>")) {
		$newNode = New-Object System.Windows.Forms.TreeNode
		$newNode.Text = "New Menu"
		$newNode.Name = "New Menu"
		$newNode.Tag = "New Menu>Menu>>>>--None--"
		$RCMenuView.SelectedNode.Nodes.Insert($SelectedNodeIndex , $newNode)
	}
	elseif ($TagText.contains(">Menu>")) {
		$newNode = New-Object System.Windows.Forms.TreeNode
		$newNode.Text = "New Tool"
		$newNode.Name = "New Tool"
		$newNode.Tag = "New Tool>>>>>--None--"
		$RCMenuView.SelectedNode.Nodes.Insert($SelectedNodeIndex , $newNode)
	}
	else {
		$newNode = New-Object System.Windows.Forms.TreeNode
		$newNode.Text = "New Tool"
		$newNode.Name = "New Tool"
		$newNode.Tag = "New Tool>>>>>--None--"
		$RCMenuView.SelectedNode.Parent.Nodes.Insert($SelectedNodeIndex , $newNode)
	}
}

$Delete_Tool=
{
	$PopupAnswer = $Popup.Popup("Are you sure you want to delete this tool?",0,"Are you sure?",1)
	if ($PopupAnswer -eq 1) {
		$DescriptionLabelText = $DescriptionLbl.Text
		if ($DescriptionLabelText -eq "Filename") {
			$FileName = $DescriptionBox.Text
			$FileName = $FileName.replace(".xml","")
			$ParentNodeName = $RCMenuView.SelectedNode.Parent
			$ParentNodeName = $ParentNodeName.Name
			$ConfigInstallPath = $env:SMS_ADMIN_UI_PATH
			$MenuInstallPath = $ConfigInstallPath.ToLower().replace("\adminconsole\bin\i386","\AdminConsole\XmlStorage\Extensions\Actions\")
			if ($ParentNodeName -eq "Device Tools"){
				Remove-Item "$MenuInstallPath\3fd01cd1-9e01-461e-92cd-94866b8d1f39\$filename.xml" -Force
				Remove-Item "$MenuInstallPath\ed9dee86-eadd-4ac8-82a1-7234a4646e62\$filename.xml" -Force
				Remove-Item "$MenuInstallPath\0770186d-ea57-4276-a46b-7344ae081b58\$filename.xml" -Force
			}
			elseif ($ParentNodeName -eq "Collection Tools") {
				Remove-Item "$MenuInstallPath\3785759b-db2c-414e-a540-e879497c6f97\$filename.xml" -Force
				Remove-Item "$MenuInstallPath\a92615d6-9df3-49ba-a8c9-6ecb0e8b956b\$filename.xml" -Force
			}
			elseif ($ParentNodeName -eq "Deployment Tools") {
				Remove-Item "$MenuInstallPath\4f89279a-6f64-467a-8e04-f35cda1f50a4\$filename.xml" -Force 
				Remove-Item "$MenuInstallPath\8d4785b2-b055-43e2-afb1-a9347c95d971\$filename.xml" -Force
				Remove-Item "$MenuInstallPath\93218e21-485a-4e2b-9f23-77c76145e214\$filename.xml" -Force 
				Remove-Item "$MenuInstallPath\20313308-298b-4c29-9830-292c57dc83d3\$filename.xml" -Force
				Remove-Item "$MenuInstallPath\21581552-82c3-42f7-b0bd-c48f04f2d148\$filename.xml" -Force
				Remove-Item "$MenuInstallPath\d1621955-48ad-4bba-9c85-95f74c0c6538\$filename.xml" -Force
				Remove-Item "$MenuInstallPath\f4739863-3c18-42c0-84cc-f214fe1be509\$filename.xml" -Force
			}
		}
		$RCMenuView.SelectedNode.Remove()
	}
}

$CloseBtn_OnClick={$form1.close()}

$AboutBtn_OnClick= 
{
	$ArgList = @()
	$ArgList += @("`"$Directory\SilentOpenPS.vbs`"")
	$ArgList += @("`"$Directory\About.ps1`"")
	Start-Process wscript.exe -ArgumentList $ArgList
}

$RCView_BeforeSelect= 
{
	$TagText = $null
	$TagText = $RCMenuView.SelectedNode.Tag
	$SplitString = $TagText.Split(">")
	$ToolName = $SplitString[0]
	$ToolType = $SplitString[1]
	$Description = $SplitString[2]
	$Execute = $SplitString[3]
	$Execute = $Execute.replace("`"","")
	$Parameters = $SplitString[4]
	$Icon = $SplitString[5]
	if ($SplitString -ne "RootMenu") {$TagText = $Namebox.Text + ">" + $ToolType + ">" + $DescriptionBox.Text + ">" + $Exebox.Text + ">" + $ParamBox.Text + ">" + $IconBox.SelectedItem}
	else {$TagText = $ToolName + ">" + $ToolType + ">" + $Description + ">" + $Execute + ">" + $Parameters + ">" + $Icon}
	$RCMenuView.SelectedNode.Tag = $TagText
	$RCMenuView.SelectedNode.Name = $NameBox.Text
	$RCMenuView.SelectedNode.Text = $NameBox.Text
}

$RCView_AfterSelect= 
{
	$TopNode = $RCMenuView.SelectedNode
	while ($TopNode.Parent -ne $null){$TopNode = $TopNode.Parent}
	$TopNodeText = $TopNode.Text
	if ($TopNodeText -eq "Device Tools") {
		$HintText = ""
	}
	elseif ($TopNodeText -eq "Collection Tools") {
		
	}
	elseif ($TopNodeText -eq "Deployment Tools") {
		
	}
	$TagText = $null
	$TagText = $RCMenuView.SelectedNode.Tag
	if ($TagText.contains(">RootMenu>")) {
		$NameBox.Text = $RCMenuView.SelectedNode.Name
		$ParamBox.Text = ""
		$ExeBox.Text = ""
		$DescriptionBox.Text = ""
		$NameBox.Enabled = $false
		$ParamBox.Enabled = $false
		$ExeBox.Enabled = $false
		$DescriptionBox.Enabled = $false
		$IconBox.Enabled = $false
		$menuItem1.enabled = $false
		$menuItem2.enabled = $false
		$menuItem3.enabled = $false
		$menuItem4.Enabled = $true
		$menuItem5.enabled = $false
	}
	else {
		$menuItem4.Enabled = $true
		$menuItem5.Enabled = $true
		$Name = $null
		$SplitString = $TagText.Split(">")
		$Name = $SplitString[0]
		if ($Name -eq $null) {
			$NameBox.Text = ""
			$ParamBox.Text = ""
			$ExeBox.Text = ""
			$DescriptionBox.Text = ""
			$NameBox.Enabled = $false
			$ParamBox.Enabled = $false
			$ExeBox.Enabled = $false
			$DescriptionBox.Enabled = $false
			$IconBox.Enabled = $false
		}
		else {
			$NameBox.Text = $Name
			if ($Name -eq "--Separator--") {
				$menuItem1.enabled = $true
				$menuItem2.enabled = $true
				$menuItem3.enabled = $true
				$ExeBox.Enabled = $False
				$ParamBox.Enabled = $False
				$NameBox.Enabled = $false
				$IconBox.Enabled = $false
				$DescriptionBox.Enabled = $false
				$DescriptionLbl.Text = "Description"
				$IconBox.SelectedItem = $SplitString[5]
				$DescriptionBox.Text = ""
				$ExeBox.Text = ""
				$ParamBox.Text = ""
			}
			elseif ($SplitString[1] -ne "Menu") {
				$menuItem1.enabled = $true
				$menuItem2.enabled = $true
				$menuItem3.enabled = $true
				$NameBox.Enabled = $true
				$DescriptionLbl.Text = "Description"
				$DescriptionBox.Text = $SplitString[2]
				$DescriptionBox.Enabled = $true
				$ExeBox.Text = $SplitString[3]
				$ExeBox.Enabled = $true
				$ParamBox.Text = $SplitString[4]
				$ParamBox.Enabled = $true
				$IconBox.SelectedItem = $SplitString[5]
				$IconBox.Enabled = $true
			}
			else {
				$menuItem1.enabled = $false
				$menuItem2.enabled = $false
				$menuItem3.enabled = $false
				$ExeBox.Enabled = $False
				$ParamBox.Enabled = $False
				$NameBox.Enabled = $true
				$IconBox.Enabled = $true
				$DescriptionBox.Enabled = $true
				$DescriptionBox.Text = $SplitString[2]
				$DescriptionLbl.Text = "Filename"
				$IconBox.SelectedItem = $SplitString[5]
				$ExeBox.Text = ""
				$ParamBox.Text = ""
			}
		}
	}
}

$DefaultBtn_OnClick= 
{
	$ConfigInstallPath = $env:SMS_ADMIN_UI_PATH
	$MenuInstallPath = $ConfigInstallPath.ToLower().replace("\adminconsole\bin\i386","\AdminConsole\XmlStorage\Extensions\Actions")
	if (Test-Path $MenuInstallPath) {}
	else {
		$MenuInstallPath = Get-Content "$Directory\Default Menus\Install Location.txt"
		$MenuInstallPath = $MenuInstallPath[0]
		$MenuInstallPath = "$MenuInstallPath"
	}
	Copy-Item "$Directory\Default Menus\Device\Client Actions on Device.xml" "$MenuInstallPath\3fd01cd1-9e01-461e-92cd-94866b8d1f39" -force
	Copy-Item "$Directory\Default Menus\Device\Client Actions on Device.xml" "$MenuInstallPath\ed9dee86-eadd-4ac8-82a1-7234a4646e62" -force
	Copy-Item "$Directory\Default Menus\Device\Client Actions on Device.xml" "$MenuInstallPath\0770186d-ea57-4276-a46b-7344ae081b58" -force
	Copy-Item "$Directory\Default Menus\Device\Client Tools on Device.xml" "$MenuInstallPath\3fd01cd1-9e01-461e-92cd-94866b8d1f39" -force
	Copy-Item "$Directory\Default Menus\Device\Client Tools on Device.xml" "$MenuInstallPath\ed9dee86-eadd-4ac8-82a1-7234a4646e62" -force
	Copy-Item "$Directory\Default Menus\Device\Client Tools on Device.xml" "$MenuInstallPath\0770186d-ea57-4276-a46b-7344ae081b58" -force
	Copy-Item "$Directory\Default Menus\Device\Console Tools on Device.xml" "$MenuInstallPath\3fd01cd1-9e01-461e-92cd-94866b8d1f39" -force
	Copy-Item "$Directory\Default Menus\Device\Console Tools on Device.xml" "$MenuInstallPath\ed9dee86-eadd-4ac8-82a1-7234a4646e62" -force
	Copy-Item "$Directory\Default Menus\Device\Console Tools on Device.xml" "$MenuInstallPath\0770186d-ea57-4276-a46b-7344ae081b58" -force
	Copy-Item "$Directory\Default Menus\Collection\Client Actions on Collection.xml" "$MenuInstallPath\3785759b-db2c-414e-a540-e879497c6f97" -force
	Copy-Item "$Directory\Default Menus\Collection\Client Actions on Collection.xml" "$MenuInstallPath\a92615d6-9df3-49ba-a8c9-6ecb0e8b956b" -force
	Copy-Item "$Directory\Default Menus\Collection\Client Tools on Collection.xml" "$MenuInstallPath\3785759b-db2c-414e-a540-e879497c6f97" -force
	Copy-Item "$Directory\Default Menus\Collection\Client Tools on Collection.xml" "$MenuInstallPath\a92615d6-9df3-49ba-a8c9-6ecb0e8b956b" -force
	Copy-Item "$Directory\Default Menus\Collection\Console Tools on Collection.xml" "$MenuInstallPath\3785759b-db2c-414e-a540-e879497c6f97" -force
	Copy-Item "$Directory\Default Menus\Collection\Console Tools on Collection.xml" "$MenuInstallPath\a92615d6-9df3-49ba-a8c9-6ecb0e8b956b" -force
	Copy-Item "$Directory\Default Menus\Deployment\Client Actions on Deployment.xml" "$MenuInstallPath\4f89279a-6f64-467a-8e04-f35cda1f50a4" -force
	Copy-Item "$Directory\Default Menus\Deployment\Client Actions on Deployment.xml" "$MenuInstallPath\8d4785b2-b055-43e2-afb1-a9347c95d971" -force
	Copy-Item "$Directory\Default Menus\Deployment\Client Actions on Deployment.xml" "$MenuInstallPath\93218e21-485a-4e2b-9f23-77c76145e214" -force
	Copy-Item "$Directory\Default Menus\Deployment\Client Actions on Deployment.xml" "$MenuInstallPath\20313308-298b-4c29-9830-292c57dc83d3" -force
	Copy-Item "$Directory\Default Menus\Deployment\Client Actions on Deployment.xml" "$MenuInstallPath\21581552-82c3-42f7-b0bd-c48f04f2d148" -force
	Copy-Item "$Directory\Default Menus\Deployment\Client Actions on Deployment.xml" "$MenuInstallPath\d1621955-48ad-4bba-9c85-95f74c0c6538" -force
	Copy-Item "$Directory\Default Menus\Deployment\Client Actions on Deployment.xml" "$MenuInstallPath\f4739863-3c18-42c0-84cc-f214fe1be509" -force
	Copy-Item "$Directory\Default Menus\Deployment\Client Tools on Deployment.xml" "$MenuInstallPath\4f89279a-6f64-467a-8e04-f35cda1f50a4" -force
	Copy-Item "$Directory\Default Menus\Deployment\Client Tools on Deployment.xml" "$MenuInstallPath\8d4785b2-b055-43e2-afb1-a9347c95d971" -force
	Copy-Item "$Directory\Default Menus\Deployment\Client Tools on Deployment.xml" "$MenuInstallPath\93218e21-485a-4e2b-9f23-77c76145e214" -force
	Copy-Item "$Directory\Default Menus\Deployment\Client Tools on Deployment.xml" "$MenuInstallPath\20313308-298b-4c29-9830-292c57dc83d3" -force
	Copy-Item "$Directory\Default Menus\Deployment\Client Tools on Deployment.xml" "$MenuInstallPath\21581552-82c3-42f7-b0bd-c48f04f2d148" -force
	Copy-Item "$Directory\Default Menus\Deployment\Client Tools on Deployment.xml" "$MenuInstallPath\d1621955-48ad-4bba-9c85-95f74c0c6538" -force
	Copy-Item "$Directory\Default Menus\Deployment\Client Tools on Deployment.xml" "$MenuInstallPath\f4739863-3c18-42c0-84cc-f214fe1be509" -force
	Copy-Item "$Directory\Default Menus\Deployment\Console Tools on Deployment.xml" "$MenuInstallPath\4f89279a-6f64-467a-8e04-f35cda1f50a4" -force
	Copy-Item "$Directory\Default Menus\Deployment\Console Tools on Deployment.xml" "$MenuInstallPath\8d4785b2-b055-43e2-afb1-a9347c95d971" -force
	Copy-Item "$Directory\Default Menus\Deployment\Console Tools on Deployment.xml" "$MenuInstallPath\93218e21-485a-4e2b-9f23-77c76145e214" -force
	Copy-Item "$Directory\Default Menus\Deployment\Console Tools on Deployment.xml" "$MenuInstallPath\20313308-298b-4c29-9830-292c57dc83d3" -force
	Copy-Item "$Directory\Default Menus\Deployment\Console Tools on Deployment.xml" "$MenuInstallPath\21581552-82c3-42f7-b0bd-c48f04f2d148" -force
	Copy-Item "$Directory\Default Menus\Deployment\Console Tools on Deployment.xml" "$MenuInstallPath\d1621955-48ad-4bba-9c85-95f74c0c6538" -force
	Copy-Item "$Directory\Default Menus\Deployment\Console Tools on Deployment.xml" "$MenuInstallPath\f4739863-3c18-42c0-84cc-f214fe1be509" -force
	$OnLoadForm_StateCorrection
}

$SaveBtn_OnClick= 
{
	$TagText = $null
	$TagText = $RCMenuView.SelectedNode.Tag
	if ($TagText -ne $null) {
		$TagText = $NameBox.Text
		$DescriptionLabelText = $DescriptionLbl.Text
		if ($DescriptionLabelText -eq "Filename") {$TagText = $TagText + ">Menu>" + $DescriptionBox.Text + ">>>" + $IconBox.Text}
		else {$TagText = $TagText + ">>" + $DescriptionBox.Text + ">" + $ExeBox.Text + ">" + $ParamBox.Text + ">" + $IconBox.Text}
		$RCMenuView.SelectedNode.Tag = $TagText
		$RCMenuView.SelectedNode.Name = $NameBox.Text
		$RCMenuView.SelectedNode.Text = $NameBox.Text
	}
	$PopupAnswer = $Popup.Popup("Are you sure you want to save these tools?",0,"Are you sure?",1)
	if ($PopupAnswer -eq 1) {
		$ConfigInstallPath = $env:SMS_ADMIN_UI_PATH
		$MenuInstallPath = $ConfigInstallPath.ToLower().replace("\adminconsole\bin\i386","\AdminConsole\XmlStorage\Extensions\Actions")
		if (Test-Path $MenuInstallPath) {}
		else {
			$MenuInstallPath = Get-Content "$Directory\Default Menus\Install Location.txt"
			$MenuInstallPath = $MenuInstallPath[0]
			$MenuInstallPath = "$MenuInstallPath"
		}
		foreach ($Node in $RCMenuView.Nodes) {
			$NodeName = $Node.Text
			foreach ($SubNode in $Node.Nodes) {
				$TagText = $SubNode.Tag
				$SplitString = $TagText.Split(">")
				$MenuName = $SplitString[0]
				$FileName = $SplitString[2]
				$IconName = $SplitString[5]
				$FileText = "<ActionDescription Class=`"Group`" DisplayName=`"$MenuName`" MnemonicDisplayName=`"$MenuName`" Description=`"Created by RC Tools Editor`" SqmDataPoint=`"53`">`n"
				$FileText = $FileText + "<ShowOn>`n"
				$FileText = $FileText + "`t<string>ContextMenu</string>`n"
				$FileText = $FileText + "</ShowOn>`n"
				if ($IconName -ne "--None--"){
					$FileText = $FileText + "<ResourceAssembly>`n"
					$FileText = $FileText + "`t<Assembly>AdminUI.CollectionProperty.dll</Assembly>`n"
					$FileText = $FileText + "`t<Type>Microsoft.ConfigurationManagement.AdminConsole.CollectionProperty.Properties.Resources.resources</Type>`n"
					$FileText = $FileText + "</ResourceAssembly>`n"
					$FileText = $FileText + "<ImagesDescription>`n"
					$FileText = $FileText + "`t<ResourceAssembly>`n"
					$FileText = $FileText + "`t`t<Assembly>AdminUI.UIResources.dll</Assembly>`n"
					$FileText = $FileText + "`t`t<Type>Microsoft.ConfigurationManagement.AdminConsole.UIResources.Properties.Resources.resources</Type>`n"
					$FileText = $FileText + "`t</ResourceAssembly>`n"
					$FileText = $FileText + "`t<ImageResourceName>$IconName</ImageResourceName>`n"
					$FileText = $FileText +  "</ImagesDescription>`n`n"
				}
				$FileText = $FileText + "<ActionGroups>`n`n"
				$SubMenu = 0
				foreach ($SubSubNode in $SubNode.Nodes) {
					$SubTagText = $SubSubNode.Tag
					$SubSplitString = $SubTagText.Split(">")
					$ToolName = $SubSplitString[0]
					$Description = $SubSplitString[2]
					$Execute = $SubSplitString[3]
					$Execute = $Execute.replace("`"","")
					$Parameters = $SubSplitString[4]
					$SubIconName = $SubSplitString[5]
					if ($ToolName -eq "--Separator--") {
						$FileText = $FileText + "`t<ActionDescription Class=`"Separator`">`n"
						$FileText = $FileText + "`t`t<ShowOn>`n"
						$FileText = $FileText + "`t`t`t<string>ContextMenu</string>`n"
						$FileText = $FileText + "`t`t</ShowOn>`n"
						$FileText = $FileText + "`t</ActionDescription>`n`n"
					}
					elseif($ToolName -eq "SubMenu") {
						$SubMenu++
						$FileText = $FileText + "<ActionDescription Class=`"Group`" DisplayName=`"$ToolName`" MnemonicDisplayName=`"$ToolName`" Description=`"$Description`" SqmDataPoint=`"53`">"
						$FileText = $FileText + "`t`t<ShowOn>`n"
						$FileText = $FileText + "`t`t`t<string>ContextMenu</string>`n"
						$FileText = $FileText + "`t`t</ShowOn>`n"
						if ($SubIconName -ne "--None--"){
							$FileText = $FileText + "`t`t<ResourceAssembly>`n"
							$FileText = $FileText + "`t`t`t<Assembly>AdminUI.CollectionProperty.dll</Assembly>`n"
							$FileText = $FileText + "`t`t`t<Type>Microsoft.ConfigurationManagement.AdminConsole.CollectionProperty.Properties.Resources.resources</Type>`n"
							$FileText = $FileText + "`t`t</ResourceAssembly>`n"
							$FileText = $FileText + "`t`t<ImagesDescription>`n"
							$FileText = $FileText + "`t`t`t<ResourceAssembly>`n"
							$FileText = $FileText + "`t`t`t`t<Assembly>AdminUI.UIResources.dll</Assembly>`n"
							$FileText = $FileText + "`t`t`t`t<Type>Microsoft.ConfigurationManagement.AdminConsole.UIResources.Properties.Resources.resources</Type>`n"
							$FileText = $FileText + "`t`t`t</ResourceAssembly>`n"
							$FileText = $FileText + "`t`t<ImageResourceName>$SubIconName</ImageResourceName>`n"
							$FileText = $FileText +  "`t`t</ImagesDescription>`n"
						}
						$FileText = $FileText + "<ActionGroups>"
						while ($SubMenuNode -ne $null) {
							
						}
					}
					else {
						$FileText = $FileText + "`t<ActionDescription Class=`"Executable`" DisplayName=`"$ToolName`" MnemonicDisplayName=`"$ToolName`" Description=`"$Description`">`n"
						$FileText = $FileText + "`t`t<ShowOn>`n"
						$FileText = $FileText + "`t`t`t<string>ContextMenu</string>`n"
						$FileText = $FileText + "`t`t</ShowOn>`n"
						if ($SubIconName -ne "--None--"){
							$FileText = $FileText + "`t`t<ResourceAssembly>`n"
							$FileText = $FileText + "`t`t`t<Assembly>AdminUI.CollectionProperty.dll</Assembly>`n"
							$FileText = $FileText + "`t`t`t<Type>Microsoft.ConfigurationManagement.AdminConsole.CollectionProperty.Properties.Resources.resources</Type>`n"
							$FileText = $FileText + "`t`t</ResourceAssembly>`n"
							$FileText = $FileText + "`t`t<ImagesDescription>`n"
							$FileText = $FileText + "`t`t`t<ResourceAssembly>`n"
							$FileText = $FileText + "`t`t`t`t<Assembly>AdminUI.UIResources.dll</Assembly>`n"
							$FileText = $FileText + "`t`t`t`t<Type>Microsoft.ConfigurationManagement.AdminConsole.UIResources.Properties.Resources.resources</Type>`n"
							$FileText = $FileText + "`t`t`t</ResourceAssembly>`n"
							$FileText = $FileText + "`t`t<ImageResourceName>$SubIconName</ImageResourceName>`n"
							$FileText = $FileText +  "`t`t</ImagesDescription>`n"
						}
						$FileText = $FileText + "`t`t<Executable>`n"
						$FileText = $FileText + "`t`t`t<FilePath>`"$execute`"</FilePath>`n"
						$FileText = $FileText + "`t`t`t<Parameters>$Parameters</Parameters>`n"
						$FileText = $FileText + "`t`t</Executable>`n"
						$FileText = $FileText + "`t</ActionDescription>`n`n"
					}
				}
				$FileText = $FileText + "`t</ActionGroups>`n"
				$FileText = $FileText + "</ActionDescription>`n"
				$FileName = $FileName.Replace(".xml","")
				if ($NodeName -eq "Device Tools"){
					& md "$MenuInstallPath\3fd01cd1-9e01-461e-92cd-94866b8d1f39"
					& md "$MenuInstallPath\ed9dee86-eadd-4ac8-82a1-7234a4646e62"
					& md "$MenuInstallPath\0770186d-ea57-4276-a46b-7344ae081b58"
					$FileText > "$MenuInstallPath\3fd01cd1-9e01-461e-92cd-94866b8d1f39\$FileName.xml"
					$FileText > "$MenuInstallPath\ed9dee86-eadd-4ac8-82a1-7234a4646e62\$FileName.xml"
					$FileText > "$MenuInstallPath\0770186d-ea57-4276-a46b-7344ae081b58\$FileName.xml"
				}
				elseif ($NodeName -eq "Collection Tools") {
					& md "$MenuInstallPath\3785759b-db2c-414e-a540-e879497c6f97"
					& md "$MenuInstallPath\a92615d6-9df3-49ba-a8c9-6ecb0e8b956b"
					$FileText > "$MenuInstallPath\3785759b-db2c-414e-a540-e879497c6f97\$FileName.xml"
					$FileText > "$MenuInstallPath\a92615d6-9df3-49ba-a8c9-6ecb0e8b956b\$FileName.xml"
				}
				elseif ($NodeName -eq "Deployment Tools") {
					& md "$MenuInstallPath\4f89279a-6f64-467a-8e04-f35cda1f50a4"
					& md "$MenuInstallPath\8d4785b2-b055-43e2-afb1-a9347c95d971"
					& md "$MenuInstallPath\93218e21-485a-4e2b-9f23-77c76145e214"
					& md "$MenuInstallPath\20313308-298b-4c29-9830-292c57dc83d3"
					& md "$MenuInstallPath\21581552-82c3-42f7-b0bd-c48f04f2d148"
					& md "$MenuInstallPath\d1621955-48ad-4bba-9c85-95f74c0c6538"
					& md "$MenuInstallPath\f4739863-3c18-42c0-84cc-f214fe1be509"
					$FileText > "$MenuInstallPath\4f89279a-6f64-467a-8e04-f35cda1f50a4\$FileName.xml"
					$FileText > "$MenuInstallPath\8d4785b2-b055-43e2-afb1-a9347c95d971\$FileName.xml"
					$FileText > "$MenuInstallPath\93218e21-485a-4e2b-9f23-77c76145e214\$FileName.xml"
					$FileText > "$MenuInstallPath\20313308-298b-4c29-9830-292c57dc83d3\$FileName.xml"
					$FileText > "$MenuInstallPath\21581552-82c3-42f7-b0bd-c48f04f2d148\$FileName.xml"
					$FileText > "$MenuInstallPath\d1621955-48ad-4bba-9c85-95f74c0c6538\$FileName.xml"
					$FileText > "$MenuInstallPath\f4739863-3c18-42c0-84cc-f214fe1be509\$FileName.xml"					
				}
			}
		}#>
	}
}

$OnLoadForm_StateCorrection=
{
	$form1.WindowState = $InitialFormWindowState
	$Add.enabled = $false
	$Add.visible = $false
	$ConfigInstallPath = $env:SMS_ADMIN_UI_PATH
	$ConfigInstallPath = $ConfigInstallPath.ToLower().replace("\adminconsole\bin\i386","\AdminConsole\XmlStorage\Extensions\Actions")
	if (Test-Path $ConfigInstallPath) {}
	else {
		$ConfigInstallPath = Get-Content "$Directory\Default Menus\Install Location.txt"
		$ConfigInstallPath = $MenuInstallPath[0]
	}
	$DeviceToolsPath = "$ConfigInstallPath\3fd01cd1-9e01-461e-92cd-94866b8d1f39"
	$CollectionToolsPath = "$ConfigInstallPath\3785759b-db2c-414e-a540-e879497c6f97"
	$DeploymentToolsPath = "$ConfigInstallPath\93218e21-485a-4e2b-9f23-77c76145e214"
	$RootNode = New-Object System.Windows.Forms.TreeNode
	$RootNode.Text = "Device Tools"
	$RootNode.Name = "Device Tools"
	$RootNode.Tag = "Device Tools>RootMenu>>>>"
	$RCMenuView.Nodes.Add($RootNode)
	Get-ChildItem $DeviceToolsPath | ForEach-Object {
		$Count = 0
		$XMLFile = Get-Content $_.FullName
		$CheckString = $XMLFile[0]
		if ($CheckString.Contains("Created by RC Tools Editor")){
			$SplitString = $CheckString.split("`"")
			if ($XMLFile[4].contains("Resource")) {
				$Icon = $XMLFile[13]
				$Icon = $Icon.split(">")
				$Icon = $Icon[1]
				$Icon = $Icon.split("<")
				$Icon = $Icon[0]
			}
			else {$Icon = "--None--"}
			$SubNode = New-Object System.Windows.Forms.TreeNode
			$SubNode.Text = $SplitString[3]
			$SubNode.Name = $SplitString[3]
			$SubNode.Tag = $SplitString[3] + ">Menu>" + $_.Name + ">>>" + $Icon
			$RootNode.Nodes.Add($SubNode)
			foreach ($string in $XMLFile) {
				if ($string.contains("<ActionDescription Class=`"Executable")){
					$SplitString = $string.split("`"")
					$DisplayName = $SplitString[3]
					$Description = $SplitString[7]
					if ($XMLFile[$Count + 4].contains("Resource")) {
						$ExeText = $XMLFile[$count + 16]
						$ExeText = $ExeText.Split("`"")
						$ExeText = $ExeText[1]
						$ParametersText = $XMLFile[$Count + 17]
						$ParametersText = $ParametersText.Split(">")
						$ParametersText = $ParametersText[1]
						$ParametersText = $ParametersText.Split("<")
						$ParametersText = $ParametersText[0]
						$Icon = $XMLFile[$Count + 13]
						$Icon = $Icon.Split(">")
						$Icon = $Icon[1]
						$Icon = $Icon.Split("<")
						$Icon = $Icon[0]
					}
					else {
						$ExeText = $XMLFile[$count + 5]
						$ExeText = $ExeText.Split("`"")
						$ExeText = $ExeText[1]
						$ParametersText = $XMLFile[$Count + 6]
						$ParametersText = $ParametersText.Split(">")
						$ParametersText = $ParametersText[1]
						$ParametersText = $ParametersText.Split("<")
						$ParametersText = $ParametersText[0]
						$Icon = "--None--"
					}
					$Node = New-Object System.Windows.Forms.TreeNode
					$Node.Text = $DisplayName
					$Node.Name = $DisplayName
					$Node.Tag = $DisplayName + ">Tool>" + $Description + ">" + $ExeText + ">" + $ParametersText + ">" + $Icon
					$SubNode.Nodes.Add($Node)
				}
				elseif ($string.contains("<ActionDescription Class=`"Separator`">")) {
					$newNode = New-Object System.Windows.Forms.TreeNode
					$newNode.Text = "--Separator--"
					$newNode.Name = "--Separator--"
					$newNode.Tag = "--Separator-->>>>>--None--"
					$SubNode.Nodes.Add($newNode)
				}
				elseif ($string.contains("<ActionDescription Class=`"Group") -and $Count -ne 0) {
					$SplitString = $XMLFile[$Count]
					$SplitString = $SplitString.split("`"")
					$DisplayName = $SplitString[3]
					$Description = $SplitString[7]
					if ($XMLFile[$Count + 4].contains("Resource")) {
						$Icon = $XMLFile[$Count + 13]
						$Icon = $Icon.Split(">")
						$Icon = $Icon[1]
						$Icon = $Icon.Split("<")
						$Icon = $Icon[0]
					}
					else {$Icon = "--None--"}
					$newNode = New-Object System.Windows.Forms.TreeNode
					$newNode.Text = $DisplayName
					$newNode.Name = $DisplayName
					$newNode.Tag = $DisplayName + ">SubMenu>" + $Description + ">>>" + $Icon
					$SubNode.Nodes.Add($newNode)
					$SubNode = $newNode
					$SubMenu++
				}
				elseif ($string.contains("</ActionGroups>")) {$SubNode = $SubNode.Parent}
				$Count++
			}
		}
	}
	$RootNode = New-Object System.Windows.Forms.TreeNode
	$RootNode.Text = "Collection Tools"
	$RootNode.Name = "Collection Tools"
	$RootNode.Tag = "Collection Tools>RootMenu>>>>"
	$RCMenuView.Nodes.Add($RootNode)
	Get-ChildItem $CollectionToolsPath | ForEach-Object {
		$Count = 0
		$XMLFile = Get-Content $_.FullName
		$CheckString = $XMLFile[0]
		if ($CheckString.Contains("Created by RC Tools Editor")){
			$SplitString = $CheckString.split("`"")
			if ($XMLFile[5].contains("Resource")) {
				$Icon = $XMLFile[14]
				$Icon = $Icon.split(">")
				$Icon = $Icon[1]
				$Icon = $Icon.split("<")
				$Icon = $Icon[0]
			}
			else {$Icon = "--None--"}
			$SubNode = New-Object System.Windows.Forms.TreeNode
			$SubNode.Text = $SplitString[3]
			$SubNode.Name = $SplitString[3]
			$SubNode.Tag = $SplitString[3] + ">Menu>" + $_.Name + ">>>" + $Icon
			$RootNode.Nodes.Add($SubNode)
			foreach ($string in $XMLFile) {
				if ($string.contains("<ActionDescription Class=`"Executable")){
					$SplitString = $string.split("`"")
					$DisplayName = $SplitString[3]
					$Description = $SplitString[7]
					if ($XMLFile[$Count + 4].contains("Resource")) {
						$ExeText = $XMLFile[$count + 16]
						$ExeText = $ExeText.Split("`"")
						$ExeText = $ExeText[1]
						$ParametersText = $XMLFile[$Count + 17]
						$ParametersText = $ParametersText.Split(">")
						$ParametersText = $ParametersText[1]
						$ParametersText = $ParametersText.Split("<")
						$ParametersText = $ParametersText[0]
						$Icon = $XMLFile[$Count + 13]
						$Icon = $Icon.Split(">")
						$Icon = $Icon[1]
						$Icon = $Icon.Split("<")
						$Icon = $Icon[0]
					}
					else {
						$ExeText = $XMLFile[$count + 5]
						$ExeText = $ExeText.Split("`"")
						$ExeText = $ExeText[1]
						$ParametersText = $XMLFile[$Count + 6]
						$ParametersText = $ParametersText.Split(">")
						$ParametersText = $ParametersText[1]
						$ParametersText = $ParametersText.Split("<")
						$ParametersText = $ParametersText[0]
						$Icon = "--None--"
					}
					$Node = New-Object System.Windows.Forms.TreeNode
					$Node.Text = $DisplayName
					$Node.Name = $DisplayName
					$Node.Tag = $DisplayName + ">Tool>" + $Description + ">" + $ExeText + ">" + $ParametersText + ">" + $Icon
					$SubNode.Nodes.Add($Node)
				}
				elseif ($string.contains("<ActionDescription Class=`"Separator`">")) {
					$newNode = New-Object System.Windows.Forms.TreeNode
					$newNode.Text = "--Separator--"
					$newNode.Name = "--Separator--"
					$newNode.Tag = "--Separator-->>>>>--None--"
					$SubNode.Nodes.Add($newNode)
				}
				elseif ($string.contains("<ActionDescription Class=`"Group") -and $Count -ne 0) {
					$SplitString = $XMLFile[$Count]
					$SplitString = $SplitString.split("`"")
					$DisplayName = $SplitString[3]
					$Description = $SplitString[7]
					if ($XMLFile[$Count + 4].contains("Resource")) {
						$Icon = $XMLFile[$Count + 13]
						$Icon = $Icon.Split(">")
						$Icon = $Icon[1]
						$Icon = $Icon.Split("<")
						$Icon = $Icon[0]
					}
					else {$Icon = "--None--"}
					$newNode = New-Object System.Windows.Forms.TreeNode
					$newNode.Text = $DisplayName
					$newNode.Name = $DisplayName
					$newNode.Tag = $DisplayName + ">SubMenu>" + $Description + ">>>" + $Icon
					$SubNode.Nodes.Add($newNode)
					$SubNode = $newNode
					$SubMenu++
				}
				elseif ($string.contains("</ActionGroups>")) {$SubNode = $SubNode.Parent}
				$Count++
			}
		}
	}
	$RootNode = New-Object System.Windows.Forms.TreeNode
	$RootNode.Text = "Deployment Tools"
	$RootNode.Name = "Deployment Tools"
	$RootNode.Tag = "Deployment Tools>RootMenu>>>>"
	$RCMenuView.Nodes.Add($RootNode)
	Get-ChildItem $DeploymentToolsPath | ForEach-Object {
		$Count = 0
		$XMLFile = Get-Content $_.FullName
		$CheckString = $XMLFile[0]
		if ($CheckString.Contains("Created by RC Tools Editor")){
			$SplitString = $CheckString.split("`"")
			if ($XMLFile[5].contains("Resource")) {
				$Icon = $XMLFile[14]
				$Icon = $Icon.split(">")
				$Icon = $Icon[1]
				$Icon = $Icon.split("<")
				$Icon = $Icon[0]
			}
			else {$Icon = "--None--"}
			$SubNode = New-Object System.Windows.Forms.TreeNode
			$SubNode.Text = $SplitString[3]
			$SubNode.Name = $SplitString[3]
			$SubNode.Tag = $SplitString[3] + ">Menu>" + $_.Name + ">>>" + $Icon
			$RootNode.Nodes.Add($SubNode)
			foreach ($string in $XMLFile) {
				if ($string.contains("<ActionDescription Class=`"Executable")){
					$SplitString = $string.split("`"")
					$DisplayName = $SplitString[3]
					$Description = $SplitString[7]
					if ($XMLFile[$Count + 4].contains("Resource")) {
						$ExeText = $XMLFile[$count + 16]
						$ExeText = $ExeText.Split("`"")
						$ExeText = $ExeText[1]
						$ParametersText = $XMLFile[$Count + 17]
						$ParametersText = $ParametersText.Split(">")
						$ParametersText = $ParametersText[1]
						$ParametersText = $ParametersText.Split("<")
						$ParametersText = $ParametersText[0]
						$Icon = $XMLFile[$Count + 13]
						$Icon = $Icon.Split(">")
						$Icon = $Icon[1]
						$Icon = $Icon.Split("<")
						$Icon = $Icon[0]
					}
					else {
						$ExeText = $XMLFile[$count + 5]
						$ExeText = $ExeText.Split("`"")
						$ExeText = $ExeText[1]
						$ParametersText = $XMLFile[$Count + 6]
						$ParametersText = $ParametersText.Split(">")
						$ParametersText = $ParametersText[1]
						$ParametersText = $ParametersText.Split("<")
						$ParametersText = $ParametersText[0]
						$Icon = "--None--"
					}
					$Node = New-Object System.Windows.Forms.TreeNode
					$Node.Text = $DisplayName
					$Node.Name = $DisplayName
					$Node.Tag = $DisplayName + ">Tool>" + $Description + ">" + $ExeText + ">" + $ParametersText + ">" + $Icon
					$SubNode.Nodes.Add($Node)
				}
				elseif ($string.contains("<ActionDescription Class=`"Separator`">")) {
					$newNode = New-Object System.Windows.Forms.TreeNode
					$newNode.Text = "--Separator--"
					$newNode.Name = "--Separator--"
					$newNode.Tag = "--Separator-->>>>>--None--"
					$SubNode.Nodes.Add($newNode)
				}
				elseif ($string.contains("<ActionDescription Class=`"Group") -and $Count -ne 0) {
					$SplitString = $XMLFile[$Count]
					$SplitString = $SplitString.split("`"")
					$DisplayName = $SplitString[3]
					$Description = $SplitString[7]
					if ($XMLFile[$Count + 4].contains("Resource")) {
						$Icon = $XMLFile[$Count + 13]
						$Icon = $Icon.Split(">")
						$Icon = $Icon[1]
						$Icon = $Icon.Split("<")
						$Icon = $Icon[0]
					}
					else {$Icon = "--None--"}
					$newNode = New-Object System.Windows.Forms.TreeNode
					$newNode.Text = $DisplayName
					$newNode.Name = $DisplayName
					$newNode.Tag = $DisplayName + ">SubMenu>" + $Description + ">>>" + $Icon
					$SubNode.Nodes.Add($newNode)
					$SubNode = $newNode
					$SubMenu++
				}
				elseif ($string.contains("</ActionGroups>")) {$SubNode = $SubNode.Parent}
				$Count++
			}
		}
	}
}

$menuItem1 = New-Object System.Windows.Forms.ToolStripMenuItem -ArgumentList "Move Up"
$ContextMenuStrip.Items.Add($menuItem1)
$menuItem1.add_Click($Move_Up)
$menuItem2 = New-Object System.Windows.Forms.ToolStripMenuItem -ArgumentList "Move Down"
$ContextMenuStrip.Items.Add($menuItem2)
$menuItem2.add_Click($Move_Down)
$menuItem3 = New-Object System.Windows.Forms.ToolStripMenuItem -ArgumentList "Insert Separator"
$ContextMenuStrip.Items.Add($menuItem3)
$menuItem3.add_Click($Add_Separator)
$menuItem4 = New-Object System.Windows.Forms.ToolStripMenuItem -ArgumentList "Add New"
$ContextMenuStrip.Items.Add($menuItem4)
$menuItem4.add_Click($Add_Tool)
$menuItem5 = New-Object System.Windows.Forms.ToolStripMenuItem -ArgumentList "Delete"
$ContextMenuStrip.Items.Add($menuItem5)
$menuItem5.add_Click($Delete_Tool)
$ContextMenuStrip.Font = New-Object System.Drawing.Font("Microsoft Sans Serif",8,0,3,0)
$RCMenuView.ContextMenuStrip = $ContextMenuStrip

#region Generated Form Code
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 404
$System_Drawing_Size.Width = 577
$form1.ClientSize = $System_Drawing_Size
$form1.DataBindings.DefaultDataSourceUpdateMode = 0
$form1.Name = "form1"
$form1.Text = "RC Tools XML Editor"

$HintLbl.Anchor = 15
$HintLbl.BorderStyle = 1
$HintLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 291
$System_Drawing_Point.Y = 291
$HintLbl.Location = $System_Drawing_Point
$HintLbl.Name = "HintLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 72
$System_Drawing_Size.Width = 274
$HintLbl.Size = $System_Drawing_Size
$HintLbl.TabIndex = 22
$HintLbl.Text = ""

$form1.Controls.Add($HintLbl)

$AboutBtn.Anchor = 6

$AboutBtn.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 369
$AboutBtn.Location = $System_Drawing_Point
$AboutBtn.Name = "AboutBtn"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$AboutBtn.Size = $System_Drawing_Size
$AboutBtn.TabIndex = 21
$AboutBtn.Text = "About"
$AboutBtn.UseVisualStyleBackColor = $True
$AboutBtn.add_Click($AboutBtn_OnClick)

$form1.Controls.Add($AboutBtn)

$DefaultBtn.Anchor = 2

$DefaultBtn.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 243
$System_Drawing_Point.Y = 369
$DefaultBtn.Location = $System_Drawing_Point
$DefaultBtn.Name = "DefaultBtn"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 107
$DefaultBtn.Size = $System_Drawing_Size
$DefaultBtn.TabIndex = 20
$DefaultBtn.Text = "Restore Defaults"
$DefaultBtn.UseVisualStyleBackColor = $True
$DefaultBtn.add_Click($DefaultBtn_OnClick)

$form1.Controls.Add($DefaultBtn)

$CloseBtn.Anchor = 10

$CloseBtn.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 490
$System_Drawing_Point.Y = 369
$CloseBtn.Location = $System_Drawing_Point
$CloseBtn.Name = "CloseBtn"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$CloseBtn.Size = $System_Drawing_Size
$CloseBtn.TabIndex = 19
$CloseBtn.Text = "Close"
$CloseBtn.UseVisualStyleBackColor = $True
$CloseBtn.add_Click($CloseBtn_OnClick)

$form1.Controls.Add($CloseBtn)

$SaveBtn.Anchor = 10

$SaveBtn.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 379
$System_Drawing_Point.Y = 369
$SaveBtn.Location = $System_Drawing_Point
$SaveBtn.Name = "SaveBtn"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 88
$SaveBtn.Size = $System_Drawing_Size
$SaveBtn.TabIndex = 18
$SaveBtn.Text = "Save"
$SaveBtn.UseVisualStyleBackColor = $True
$SaveBtn.add_Click($SaveBtn_OnClick)

$form1.Controls.Add($SaveBtn)

$IconBox.Anchor = 13
$IconBox.DataBindings.DefaultDataSourceUpdateMode = 0
$IconBox.DropDownStyle = 2
$IconBox.DropdownHeight = 212
$IconBox.FlatStyle = 3
$IconBox.FormattingEnabled = $True
$IconBox.Items.Add("--None--")|Out-Null
$IconBox.Items.Add("Account")|Out-Null
$IconBox.Items.Add("Activate")|Out-Null
$IconBox.Items.Add("Add")|Out-Null
$IconBox.Items.Add("Advertisement")|Out-Null
$IconBox.Items.Add("AntiMalware")|Out-Null
$IconBox.Items.Add("Application")|Out-Null
$IconBox.Items.Add("AssetsOverview")|Out-Null
$IconBox.Items.Add("AvailableCategoriesIcon")|Out-Null
$IconBox.Items.Add("Baseline")|Out-Null
$IconBox.Items.Add("Block")|Out-Null
$IconBox.Items.Add("CancelWipe")|Out-Null
$IconBox.Items.Add("Categorize")|Out-Null
$IconBox.Items.Add("ClearLastPXEAdvertisement")|Out-Null
$IconBox.Items.Add("ClientAgent")|Out-Null
$IconBox.Items.Add("Collection")|Out-Null
$IconBox.Items.Add("Computer")|Out-Null
$IconBox.Items.Add("ComputerManagement")|Out-Null
$IconBox.Items.Add("Copy")|Out-Null
$IconBox.Items.Add("CreateBaseline")|Out-Null
$IconBox.Items.Add("CreateChildConfigurationItem")|Out-Null
$IconBox.Items.Add("CreateComputerAssociation")|Out-Null
$IconBox.Items.Add("CreateConfigurationItem")|Out-Null
$IconBox.Items.Add("CreateDeviceCollection")|Out-Null
$IconBox.Items.Add("CreateDeviceSettings")|Out-Null
$IconBox.Items.Add("CreateHardwareRequirements")|Out-Null
$IconBox.Items.Add("CreateSoftwareMeteringRule")|Out-Null
$IconBox.Items.Add("CreateUserCollection")|Out-Null
$IconBox.Items.Add("CustomizeCatalogIcon")|Out-Null
$IconBox.Items.Add("DCM_CI")|Out-Null
$IconBox.Items.Add("DecreasePriority")|Out-Null
$IconBox.Items.Add("Delete")|Out-Null
$IconBox.Items.Add("Deploy")|Out-Null
$IconBox.Items.Add("Deployment")|Out-Null
$IconBox.Items.Add("Disable")|Out-Null
$IconBox.Items.Add("Edit")|Out-Null
$IconBox.Items.Add("EditPrimaryDevices")|Out-Null
$IconBox.Items.Add("EditPrimaryUsers")|Out-Null
$IconBox.Items.Add("Enable")|Out-Null
$IconBox.Items.Add("ExchangeDevice")|Out-Null
$IconBox.Items.Add("ExportObject")|Out-Null
$IconBox.Items.Add("Firewall")|Out-Null
$IconBox.Items.Add("Folder")|Out-Null
$IconBox.Items.Add("HardwareRequirements")|Out-Null
$IconBox.Items.Add("ImportObject")|Out-Null
$IconBox.Items.Add("IncreasePriority")|Out-Null
$IconBox.Items.Add("InstallClient")|Out-Null
$IconBox.Items.Add("ManageUserDeviceAffinityRequests")|Out-Null
$IconBox.Items.Add("Merge")|Out-Null
$IconBox.Items.Add("New")|Out-Null
$IconBox.Items.Add("NewCategoryIcon")|Out-Null
$IconBox.Items.Add("NewFamilyIcon")|Out-Null
$IconBox.Items.Add("NewTagIcon")|Out-Null
$IconBox.Items.Add("Ok")|Out-Null
$IconBox.Items.Add("OOB_ManagementController")|Out-Null
$IconBox.Items.Add("Open")|Out-Null
$IconBox.Items.Add("OSD_TaskSequenceList")|Out-Null
$IconBox.Items.Add("Play")|Out-Null
$IconBox.Items.Add("Program")|Out-Null
$IconBox.Items.Add("Property")|Out-Null
$IconBox.Items.Add("RemoteAssistance")|Out-Null
$IconBox.Items.Add("RemoteControl")|Out-Null
$IconBox.Items.Add("RemoteDesktopClient")|Out-Null
$IconBox.Items.Add("RequestCatalogUpdateIcon")|Out-Null
$IconBox.Items.Add("ResolveMismatch")|Out-Null
$IconBox.Items.Add("ResourceExplorer")|Out-Null
$IconBox.Items.Add("RevertBackIcon")|Out-Null
$IconBox.Items.Add("RevisionHistory")|Out-Null
$IconBox.Items.Add("RunSummarization")|Out-Null
$IconBox.Items.Add("ScheduleSummarization")|Out-Null
$IconBox.Items.Add("SecurityScope")|Out-Null
$IconBox.Items.Add("SoftwareInventory")|Out-Null
$IconBox.Items.Add("SoftwareMetering")|Out-Null
$IconBox.Items.Add("SoftwareProducts")|Out-Null
$IconBox.Items.Add("SUM_Update")|Out-Null
$IconBox.Items.Add("Synchronize")|Out-Null
$IconBox.Items.Add("TimeStmp")|Out-Null
$IconBox.Items.Add("UpdateMembership")|Out-Null
$IconBox.Items.Add("UserAccounts")|Out-Null
$IconBox.Items.Add("UserCollection")|Out-Null
$IconBox.Items.Add("UserStateMigration")|Out-Null
$IconBox.Items.Add("ViewStatus")|Out-Null
$IconBox.Items.Add("ViewXMLDefinition")|Out-Null
$IconBox.Items.Add("Wipe")|Out-Null
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 291
$System_Drawing_Point.Y = 257
$IconBox.Location = $System_Drawing_Point
$IconBox.Name = "IconBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 274
$IconBox.Size = $System_Drawing_Size
$IconBox.TabIndex = 17

$form1.Controls.Add($IconBox)

$IconLbl.Anchor = 13
$IconLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 291
$System_Drawing_Point.Y = 231
$IconLbl.Location = $System_Drawing_Point
$IconLbl.Name = "IconLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 274
$IconLbl.Size = $System_Drawing_Size
$IconLbl.TabIndex = 16
$IconLbl.Text = "Icon"
$IconLbl.TextAlign = 16

$form1.Controls.Add($IconLbl)

$ParamBox.Anchor = 13
$ParamBox.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 291
$System_Drawing_Point.Y = 208
$ParamBox.Location = $System_Drawing_Point
$ParamBox.Name = "ParamBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 274
$ParamBox.Size = $System_Drawing_Size
$ParamBox.TabIndex = 15

$form1.Controls.Add($ParamBox)

$ParamLbl.Anchor = 13
$ParamLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 291
$System_Drawing_Point.Y = 182
$ParamLbl.Location = $System_Drawing_Point
$ParamLbl.Name = "ParamLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 274
$ParamLbl.Size = $System_Drawing_Size
$ParamLbl.TabIndex = 14
$ParamLbl.Text = "Parameters"
$ParamLbl.TextAlign = 16

$form1.Controls.Add($ParamLbl)

$ExeBox.Anchor = 13
$ExeBox.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 291
$System_Drawing_Point.Y = 159
$ExeBox.Location = $System_Drawing_Point
$ExeBox.Name = "ExeBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 274
$ExeBox.Size = $System_Drawing_Size
$ExeBox.TabIndex = 13

$form1.Controls.Add($ExeBox)

$ExeLbl.Anchor = 13
$ExeLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 291
$System_Drawing_Point.Y = 133
$ExeLbl.Location = $System_Drawing_Point
$ExeLbl.Name = "ExeLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 274
$ExeLbl.Size = $System_Drawing_Size
$ExeLbl.TabIndex = 12
$ExeLbl.Text = "Executable"
$ExeLbl.TextAlign = 16

$form1.Controls.Add($ExeLbl)

$DescriptionBox.Anchor = 13
$DescriptionBox.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 291
$System_Drawing_Point.Y = 110
$DescriptionBox.Location = $System_Drawing_Point
$DescriptionBox.Name = "DescriptionBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 274
$DescriptionBox.Size = $System_Drawing_Size
$DescriptionBox.TabIndex = 11

$form1.Controls.Add($DescriptionBox)

$DescriptionLbl.Anchor = 13
$DescriptionLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 291
$System_Drawing_Point.Y = 84
$DescriptionLbl.Location = $System_Drawing_Point
$DescriptionLbl.Name = "DescriptionLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 274
$DescriptionLbl.Size = $System_Drawing_Size
$DescriptionLbl.TabIndex = 10
$DescriptionLbl.Text = "Description"
$DescriptionLbl.TextAlign = 16

$form1.Controls.Add($DescriptionLbl)

$NameBox.Anchor = 13
$NameBox.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 291
$System_Drawing_Point.Y = 61
$NameBox.Location = $System_Drawing_Point
$NameBox.Name = "NameBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 274
$NameBox.Size = $System_Drawing_Size
$NameBox.TabIndex = 9

$form1.Controls.Add($NameBox)

$Namelbl.Anchor = 13
$Namelbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 291
$System_Drawing_Point.Y = 35
$Namelbl.Location = $System_Drawing_Point
$Namelbl.Name = "Namelbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 274
$Namelbl.Size = $System_Drawing_Size
$Namelbl.TabIndex = 8
$Namelbl.Text = "Name"
$Namelbl.TextAlign = 16

$form1.Controls.Add($Namelbl)

$MenuLbl.Anchor = 13
$MenuLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 291
$System_Drawing_Point.Y = 9
$MenuLbl.Location = $System_Drawing_Point
$MenuLbl.Name = "MenuLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 274
$MenuLbl.Size = $System_Drawing_Size
$MenuLbl.TabIndex = 7
$MenuLbl.Text = "Tool Options"
$MenuLbl.TextAlign = 32

$form1.Controls.Add($MenuLbl)

$Add.Anchor = 6

$Add.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 114
$System_Drawing_Point.Y = 369
$Add.Location = $System_Drawing_Point
$Add.Name = "Add"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 105
$Add.Size = $System_Drawing_Size
$Add.TabIndex = 6
$Add.Text = "Add New Tool"
$Add.UseVisualStyleBackColor = $True
$Add.add_Click($Add_OnClick)

$form1.Controls.Add($Add)

$RCMenuView.Anchor = 7
$RCMenuView.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 35
$RCMenuView.Location = $System_Drawing_Point
$RCMenuView.Name = "RCMenuView"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 328
$System_Drawing_Size.Width = 273
$RCMenuView.Size = $System_Drawing_Size
$RCMenuView.TabIndex = 1
$RCMenuView.add_AfterSelect($RCView_AfterSelect)
$RCMenuView.add_BeforeSelect($RCView_BeforeSelect)

$form1.Controls.Add($RCMenuView)

$RCToolsLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 9
$RCToolsLbl.Location = $System_Drawing_Point
$RCToolsLbl.Name = "RCToolsLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 273
$RCToolsLbl.Size = $System_Drawing_Size
$RCToolsLbl.TabIndex = 0
$RCToolsLbl.Text = "RC Tools"
$RCToolsLbl.TextAlign = 32

$form1.Controls.Add($RCToolsLbl)

#endregion Generated Form Code

#Save the initial state of the form
$InitialFormWindowState = $form1.WindowState
#Init the OnLoad event to correct the initial state of the form
$form1.add_Load($OnLoadForm_StateCorrection)
#Show the Form
$form1.ShowDialog()| Out-Null

} #End Function

#Call the Function
GenerateForm
