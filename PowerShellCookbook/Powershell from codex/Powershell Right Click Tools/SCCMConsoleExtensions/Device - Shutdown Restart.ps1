<#
Written by Ryan Ephgrave for ConfigMgr 2012 Right Click Tools
http://psrightclicktools.codeplex.com/
GUI Generated By: SAPIEN Technologies PrimalForms (Community Edition) v1.0.10.0
#>

$ResourceID = $args[0]
$strAction = $args[1]
$Server = $args[2]
$Namespace = $args[3]

$strQuery = "Select ResourceID,ResourceNames from SMS_R_System where ResourceID='$ResourceID'"
Get-WmiObject -Query $strQuery -Namespace $Namespace -ComputerName $Server | ForEach-Object {$CompName = $_.ResourceNames[0]}

$GetDirectory = $MyInvocation.MyCommand.path
$Directory = Split-Path $GetDirectory

$Popup = new-object -comobject wscript.shell

function GenerateForm {

#region Import the Assemblies
[reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
#endregion

#region Generated Form Objects
$form1 = New-Object System.Windows.Forms.Form
$ByLbl = New-Object System.Windows.Forms.Label
$UserLogInBox = New-Object System.Windows.Forms.ComboBox
$CancelBtn = New-Object System.Windows.Forms.Button
$StartBtn = New-Object System.Windows.Forms.Button
$msgBox = New-Object System.Windows.Forms.RichTextBox
$label4 = New-Object System.Windows.Forms.Label
$TimeBox = New-Object System.Windows.Forms.TextBox
$label3 = New-Object System.Windows.Forms.Label
$label2 = New-Object System.Windows.Forms.Label
$label1 = New-Object System.Windows.Forms.Label
$InitialFormWindowState = New-Object System.Windows.Forms.FormWindowState
#endregion Generated Form Objects

$CancelBtn_OnClick= {$form1.close()}


$StartBtn_OnClick= 
{
	$psexec = "$directory\psexec.exe"
	$IndexNum = $UserLogInBox.SelectedIndex
	$msg = $msgBox.Text
	$Delay = $TimeBox.Text
	$Error.Clear()
	if (Test-Connection -computername $CompName -count 1 -quiet){
		if ($strAction -eq "Restart"){
			if ($IndexNum -eq 0){
				& shutdown.exe /r /f /t $Delay /d p:0:0 /m $CompName /c $msg
				if ($Error[0]){$Popup.popup(“Error triggering $strAction on $compname“,0,”Results”,0)}
				else {$Popup.popup(“Successfully triggered a $strAction on $compname“,0,”Results”,0)}
				}
			elseif ($IndexNum -eq 1){
				Get-WmiObject -ComputerName $CompName -class Win32_OperatingSystem | ForEach-Object {$WinDirectory = $_.WindowsDirectory}
				$CopyDirectory = $WinDirectory.ToLower().replace("c:","\\$CompName\c$")
				Copy-Item "$Directory\ConfigMgr_Shutdown_Utility.exe" $CopyDirectory -Force
				Copy-Item "$Directory\ConfigMgr_Shutdown_Utility.vbs" $CopyDirectory -Force
				$SentShutdown = $false
				$Error.Clear()
				$strQuery = "Select SessionID,Name from Win32_Process where Name='explorer.exe'"
				Get-WmiObject -ComputerName $CompName -Query $strQuery | ForEach-Object{
					if ($_.Name -ne $null){
						$SessionID = $_.SessionID
						& $psexec "\\$CompName" /d /s /i $SessionID wscript.exe "$WinDirectory\ConfigMgr_Shutdown_Utility.vbs" "$WinDirectory\ConfigMgr_Shutdown_Utility.exe" /r /t $Delay /msg "`"$msg`""
						$SentShutdown = $true
					}
				}
				if ($SentShutdown -eq $false) {& Shutdown.exe /s /f /t $Delay /d p:0:0 /m $CompName /c $msg}
				if ($Error[0]){$popup.popup(“Error triggering $strAction on $compname`n$Error“,0,”Results”,0)}
				else {$popup.popup(“Successfully triggered a $strAction on $compname“,0,”Results”,0)}
			}
			elseif ($IndexNum -eq 2){
				$skip = 0
				$strSkipMsg = "These users are logged in, skipping:"
				$strQuery = "Select * from Win32_Process where Name='explorer.exe'"
				Get-WmiObject -ComputerName $CompName -query $strQuery | ForEach-Object{
					if ($_.Name -ne $null){
						$owners = $_.GetOwner()
						foreach ($owner in $owners){
							$strSkipMsg = $strSkipMsg + "`n Domain: " + $owner.Domain + "  Username: " + $owner.User
						}
						$skip = 1
						$Popup.Popup($strSkipMsg,0,"Results",0)
					}
				}
				if ($skip -eq 0){
					& shutdown.exe /r /f /t $Delay /d p:0:0 /m $CompName /c $msg
					if ($Error[0]){$Popup.popup(“Error triggering $strAction on $compname“,0,”Results”,0)}
					else {$Popup.popup(“Successfully triggered a $strAction on $compname“,0,”Results”,0)}
				}
			}
		}
		elseif ($strAction -eq "Shutdown"){
			if ($IndexNum -eq 0){
				& shutdown.exe /s /f /t $Delay /d p:0:0 /m $CompName /c $msg
				if ($Error[0]){$Popup.popup(“Error triggering $strAction on $compname“,0,”Results”,0)}
				else {$Popup.popup(“Successfully triggered a $strAction on $compname“,0,”Results”,0)}
				}
			elseif ($IndexNum -eq 1){
				Get-WmiObject -ComputerName $CompName -class Win32_OperatingSystem | ForEach-Object {$WinDirectory = $_.WindowsDirectory}
				$CopyDirectory = $WinDirectory.ToLower().replace("c:","\\$CompName\c$")
				Copy-Item "$Directory\ConfigMgr_Shutdown_Utility.exe" $CopyDirectory -Force
				Copy-Item "$Directory\ConfigMgr_Shutdown_Utility.vbs" $CopyDirectory -Force
				$strQuery = "Select SessionID,Name from Win32_Process where Name='explorer.exe'"
				$SentShutdown = $false
				Get-WmiObject -ComputerName $CompName -Query $strQuery | ForEach-Object{
					if ($_.Name -ne $null){
						$SessionID = $_.SessionID
						& $psexec "\\$CompName" /d /s /i $SessionID wscript.exe "$WinDirectory\ConfigMgr_Shutdown_Utility.vbs" "$WinDirectory\ConfigMgr_Shutdown_Utility.exe" /s /t $Delay /msg "`"$msg`""
						$SentShutdown = $true
					}
				}
				if ($SentShutdown -eq $false) {& Shutdown.exe /s /f /t $Delay /d p:0:0 /m $CompName /c $msg}
				if ($Error[0]){$Popup.popup(“Error triggering $strAction on $compname“,0,”Results”,0)}
				else {$Popup.popup(“Successfully triggered a $strAction on $compname“,0,”Results”,0)}
			}
			elseif ($IndexNum -eq 2){
				$skip = 0
				$strSkipMsg = "These users are logged in, skipping:"
				$strQuery = "Select * from Win32_Process where Name='explorer.exe'"
				Get-WmiObject -ComputerName $CompName -query $strQuery | ForEach-Object{
					if ($_.Name -ne $null){
						$owners = $_.GetOwner()
						foreach ($owner in $owners){
							$strSkipMsg = $strSkipMsg + "`n Domain: " + $owner.Domain + "  Username: " + $owner.User
						}
						$skip = 1
						$Popup.Popup($strSkipMsg,0,"Results",0)
					}
				}
				if ($skip -eq 0){
					& shutdown.exe /s /f /t $Delay /d p:0:0 /m $CompName /c $msg
					if ($Error[0]){$Popup.popup(“Error triggering $strAction on $compname“,0,”Results”,0)}
					else {$Popup.popup(“Successfully triggered a $strAction on $compname“,0,”Results”,0)}
				}
			}			
		}
		$form1.Close()
	}
	else {
		$popup.popup("Can not ping $CompName",0,"Results",0)
		$form1.Close()
	}
}

$OnLoadForm_StateCorrection=
{#Correct the initial state of the form to prevent the .Net maximized form issue
	$form1.WindowState = $InitialFormWindowState
	$UserLogInBox.SelectedIndex = 0
	$TimeBox.Text = 30
	$msgBox.Text = "The system will shut down in 30 seconds. Please save your work and log off."
}

#----------------------------------------------
#region Generated Form Code
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 247
$System_Drawing_Size.Width = 477
$form1.ClientSize = $System_Drawing_Size
$form1.DataBindings.DefaultDataSourceUpdateMode = 0
$form1.FormBorderStyle = 1
$form1.MaximizeBox = $False
$form1.Name = "form1"
$form1.Text = "$strAction Tool"

$ByLbl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 214
$ByLbl.Location = $System_Drawing_Point
$ByLbl.Name = "ByLbl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 217
$ByLbl.Size = $System_Drawing_Size
$ByLbl.TabIndex = 13
$ByLbl.Text = "Written by Ryan Ephgrave"

$form1.Controls.Add($ByLbl)

$UserLogInBox.DataBindings.DefaultDataSourceUpdateMode = 0
$UserLogInBox.DropDownStyle = 2
$UserLogInBox.FormattingEnabled = $True
$UserLogInBox.Items.Add("$strAction computer")|Out-Null
$UserLogInBox.Items.Add("Give user a prompt to cancel")|Out-Null
$UserLogInBox.Items.Add("Skip computer")|Out-Null
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 235
$System_Drawing_Point.Y = 35
$UserLogInBox.Location = $System_Drawing_Point
$UserLogInBox.Name = "UserLogInBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 201
$UserLogInBox.Size = $System_Drawing_Size
$UserLogInBox.TabIndex = 9

$form1.Controls.Add($UserLogInBox)


$CancelBtn.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 291
$System_Drawing_Point.Y = 214
$CancelBtn.Location = $System_Drawing_Point
$CancelBtn.Name = "CancelBtn"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$CancelBtn.Size = $System_Drawing_Size
$CancelBtn.TabIndex = 8
$CancelBtn.Text = "Cancel"
$CancelBtn.UseVisualStyleBackColor = $True
$CancelBtn.add_Click($CancelBtn_OnClick)

$form1.Controls.Add($CancelBtn)


$StartBtn.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 390
$System_Drawing_Point.Y = 214
$StartBtn.Location = $System_Drawing_Point
$StartBtn.Name = "StartBtn"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$StartBtn.Size = $System_Drawing_Size
$StartBtn.TabIndex = 7
$StartBtn.Text = "$strAction"
$StartBtn.UseVisualStyleBackColor = $True
$StartBtn.add_Click($StartBtn_OnClick)

$form1.Controls.Add($StartBtn)

$msgBox.DataBindings.DefaultDataSourceUpdateMode = 0
$msgBox.Font = New-Object System.Drawing.Font("Microsoft Sans Serif",9,0,3,1)
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 130
$msgBox.Location = $System_Drawing_Point
$msgBox.Name = "msgBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 72
$System_Drawing_Size.Width = 453
$msgBox.Size = $System_Drawing_Size
$msgBox.TabIndex = 6
$msgBox.Text = ""

$form1.Controls.Add($msgBox)

$label4.DataBindings.DefaultDataSourceUpdateMode = 0
$label4.Font = New-Object System.Drawing.Font("Microsoft Sans Serif",9,0,3,1)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 104
$label4.Location = $System_Drawing_Point
$label4.Name = "label4"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 232
$label4.Size = $System_Drawing_Size
$label4.TabIndex = 5
$label4.Text = "Message to display:"

$form1.Controls.Add($label4)

$TimeBox.DataBindings.DefaultDataSourceUpdateMode = 0
$TimeBox.Font = New-Object System.Drawing.Font("Microsoft Sans Serif",9,0,3,1)
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 235
$System_Drawing_Point.Y = 68
$TimeBox.Location = $System_Drawing_Point
$TimeBox.Name = "TimeBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 120
$TimeBox.Size = $System_Drawing_Size
$TimeBox.TabIndex = 4

$form1.Controls.Add($TimeBox)

$label3.DataBindings.DefaultDataSourceUpdateMode = 0
$label3.Font = New-Object System.Drawing.Font("Microsoft Sans Serif",9,0,3,1)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 71
$label3.Location = $System_Drawing_Point
$label3.Name = "label3"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 217
$label3.Size = $System_Drawing_Size
$label3.TabIndex = 3
$label3.Text = "Delay (in seconds) before $strAction"

$form1.Controls.Add($label3)

$label2.DataBindings.DefaultDataSourceUpdateMode = 0
$label2.Font = New-Object System.Drawing.Font("Microsoft Sans Serif",9,0,3,1)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 32
$label2.Location = $System_Drawing_Point
$label2.Name = "label2"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 217
$label2.Size = $System_Drawing_Size
$label2.TabIndex = 2
$label2.Text = "If a user is logged into the computer:"

$form1.Controls.Add($label2)

$label1.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 9
$label1.Location = $System_Drawing_Point
$label1.Name = "label1"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 453
$label1.Size = $System_Drawing_Size
$label1.TabIndex = 1
$label1.Text = "$CompName"
$label1.TextAlign = 2

$form1.Controls.Add($label1)

#endregion Generated Form Code

#Save the initial state of the form
$InitialFormWindowState = $form1.WindowState
#Init the OnLoad event to correct the initial state of the form
$form1.add_Load($OnLoadForm_StateCorrection)
#Show the Form
$form1.ShowDialog()| Out-Null

} #End Function


GenerateForm
